{"ast":null,"code":"// import React from \"react\";\n// // react plugin for creating date-time-picker\n// import Datetime from \"react-datetime\";\n// // @material-ui/core components\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Slide from \"@material-ui/core/Slide\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import Dialog from \"@material-ui/core/Dialog\";\n// import DialogTitle from \"@material-ui/core/DialogTitle\";\n// import DialogContent from \"@material-ui/core/DialogContent\";\n// import DialogActions from \"@material-ui/core/DialogActions\";\n// import InputLabel from \"@material-ui/core/InputLabel\";\n// import FormControl from \"@material-ui/core/FormControl\";\n// import Tooltip from \"@material-ui/core/Tooltip\";\n// import Popover from \"@material-ui/core/Popover\";\n// // @material-ui/icons\n// import LibraryBooks from \"@material-ui/icons/LibraryBooks\";\n// import Close from \"@material-ui/icons/Close\";\n// // core components\n// import GridContainer from \"components/Grid/GridContainer.js\";\n// import GridItem from \"components/Grid/GridItem.js\";\n// import Button from \"components/CustomButtons/Button.js\";\n// import styles from \"assets/jss/material-kit-react/views/componentsSections/javascriptStyles.js\";\n// const useStyles = makeStyles(styles);\n// const Transition = React.forwardRef(function Transition(props, ref) {\n//   return <Slide direction=\"down\" ref={ref} {...props} />;\n// });\n// Transition.displayName = \"Transition\";\n// export default function SectionJavascript() {\n//   const classes = useStyles();\n//   const [anchorElLeft, setAnchorElLeft] = React.useState(null);\n//   const [anchorElTop, setAnchorElTop] = React.useState(null);\n//   const [anchorElBottom, setAnchorElBottom] = React.useState(null);\n//   const [anchorElRight, setAnchorElRight] = React.useState(null);\n//   const [classicModal, setClassicModal] = React.useState(false);\n//   return (\n//     <div className={classes.section}>\n//       <div className={classes.container}>\n//         <div className={classes.title}>\n//           <h2>Javascript components</h2>\n//         </div>\n//         <GridContainer>\n//           <GridItem xs={12} sm={12} md={6}>\n//             <div className={classes.title}>\n//               <h3>Modal</h3>\n//             </div>\n//             <GridContainer>\n//               <GridItem xs={12} sm={12} md={6} lg={4}>\n//                 <Button\n//                   color=\"primary\"\n//                   block\n//                   onClick={() => setClassicModal(true)}\n//                 >\n//                   <LibraryBooks className={classes.icon} />\n//                   Classic\n//                 </Button>\n//                 <Dialog\n//                   classes={{\n//                     root: classes.center,\n//                     paper: classes.modal\n//                   }}\n//                   open={classicModal}\n//                   TransitionComponent={Transition}\n//                   keepMounted\n//                   onClose={() => setClassicModal(false)}\n//                   aria-labelledby=\"classic-modal-slide-title\"\n//                   aria-describedby=\"classic-modal-slide-description\"\n//                 >\n//                   <DialogTitle\n//                     id=\"classic-modal-slide-title\"\n//                     disableTypography\n//                     className={classes.modalHeader}\n//                   >\n//                     <IconButton\n//                       className={classes.modalCloseButton}\n//                       key=\"close\"\n//                       aria-label=\"Close\"\n//                       color=\"inherit\"\n//                       onClick={() => setClassicModal(false)}\n//                     >\n//                       <Close className={classes.modalClose} />\n//                     </IconButton>\n//                     <h4 className={classes.modalTitle}>Modal title</h4>\n//                   </DialogTitle>\n//                   <DialogContent\n//                     id=\"classic-modal-slide-description\"\n//                     className={classes.modalBody}\n//                   >\n//                     <p>\n//                       Far far away, behind the word mountains, far from the\n//                       countries Vokalia and Consonantia, there live the blind\n//                       texts. Separated they live in Bookmarksgrove right at the\n//                       coast of the Semantics, a large language ocean. A small\n//                       river named Duden flows by their place and supplies it\n//                       with the necessary regelialia. It is a paradisematic\n//                       country, in which roasted parts of sentences fly into your\n//                       mouth. Even the all-powerful Pointing has no control about\n//                       the blind texts it is an almost unorthographic life One\n//                       day however a small line of blind text by the name of\n//                       Lorem Ipsum decided to leave for the far World of Grammar.\n//                     </p>\n//                   </DialogContent>\n//                   <DialogActions className={classes.modalFooter}>\n//                     <Button color=\"transparent\" simple>\n//                       Nice Button\n//                     </Button>\n//                     <Button\n//                       onClick={() => setClassicModal(false)}\n//                       color=\"danger\"\n//                       simple\n//                     >\n//                       Close\n//                     </Button>\n//                   </DialogActions>\n//                 </Dialog>\n//               </GridItem>\n//             </GridContainer>\n//             <GridItem xs={12} sm={12} md={12}>\n//               <div className={classes.title}>\n//                 <h3>Datetime Picker</h3>\n//               </div>\n//               <GridContainer>\n//                 <GridItem xs={12} sm={12} md={6}>\n//                   <InputLabel className={classes.label}>\n//                     Datetime Picker\n//                   </InputLabel>\n//                   <br />\n//                   <FormControl fullWidth>\n//                     <Datetime\n//                       inputProps={{ placeholder: \"Datetime Picker Here\" }}\n//                     />\n//                   </FormControl>\n//                 </GridItem>\n//               </GridContainer>\n//             </GridItem>\n//           </GridItem>\n//           <GridItem xs={12} sm={12} md={6}>\n//             <div className={classes.title}>\n//               <h3>Popovers</h3>\n//             </div>\n//             <Button onClick={event => setAnchorElLeft(event.currentTarget)}>\n//               On left\n//             </Button>\n//             <Popover\n//               classes={{\n//                 paper: classes.popover\n//               }}\n//               open={Boolean(anchorElLeft)}\n//               anchorEl={anchorElLeft}\n//               onClose={() => setAnchorElLeft(null)}\n//               anchorOrigin={{\n//                 vertical: \"center\",\n//                 horizontal: \"left\"\n//               }}\n//               transformOrigin={{\n//                 vertical: \"center\",\n//                 horizontal: \"right\"\n//               }}\n//             >\n//               <h3 className={classes.popoverHeader}>Popover on left</h3>\n//               <div className={classes.popoverBody}>\n//                 Here will be some very useful information about his popover.\n//                 Here will be some very useful information about his popover.\n//               </div>\n//             </Popover>\n//             <Button onClick={event => setAnchorElTop(event.currentTarget)}>\n//               On top\n//             </Button>\n//             <Popover\n//               classes={{\n//                 paper: classes.popover\n//               }}\n//               open={Boolean(anchorElTop)}\n//               anchorEl={anchorElTop}\n//               onClose={() => setAnchorElTop(null)}\n//               anchorOrigin={{\n//                 vertical: \"top\",\n//                 horizontal: \"center\"\n//               }}\n//               transformOrigin={{\n//                 vertical: \"bottom\",\n//                 horizontal: \"center\"\n//               }}\n//             >\n//               <h3 className={classes.popoverHeader}>Popover on top</h3>\n//               <div className={classes.popoverBody}>\n//                 Here will be some very useful information about his popover.\n//               </div>\n//             </Popover>\n//             <Button onClick={event => setAnchorElBottom(event.currentTarget)}>\n//               On bottom\n//             </Button>\n//             <Popover\n//               classes={{\n//                 paper: classes.popover\n//               }}\n//               open={Boolean(anchorElBottom)}\n//               anchorEl={anchorElBottom}\n//               onClose={() => setAnchorElBottom(null)}\n//               anchorOrigin={{\n//                 vertical: \"bottom\",\n//                 horizontal: \"center\"\n//               }}\n//               transformOrigin={{\n//                 vertical: \"top\",\n//                 horizontal: \"center\"\n//               }}\n//             >\n//               <h3 className={classes.popoverHeader}>Popover on bottom</h3>\n//               <div className={classes.popoverBody}>\n//                 Here will be some very useful information about his popover.\n//               </div>\n//             </Popover>\n//             <Button onClick={event => setAnchorElRight(event.currentTarget)}>\n//               On right\n//             </Button>\n//             <Popover\n//               classes={{\n//                 paper: classes.popover\n//               }}\n//               open={Boolean(anchorElRight)}\n//               anchorEl={anchorElRight}\n//               onClose={() => setAnchorElRight(null)}\n//               anchorOrigin={{\n//                 vertical: \"center\",\n//                 horizontal: \"right\"\n//               }}\n//               transformOrigin={{\n//                 vertical: \"center\",\n//                 horizontal: \"left\"\n//               }}\n//             >\n//               <h3 className={classes.popoverHeader}>Popover on right</h3>\n//               <div className={classes.popoverBody}>\n//                 Here will be some very useful information about his popover.\n//               </div>\n//             </Popover>\n//             <br />\n//             <br />\n//             <div className={classes.title}>\n//               <h3>Tooltips</h3>\n//             </div>\n//             <Tooltip\n//               id=\"tooltip-left\"\n//               title=\"Tooltip on left\"\n//               placement=\"left\"\n//               classes={{ tooltip: classes.tooltip }}\n//             >\n//               <Button>On left</Button>\n//             </Tooltip>\n//             <Tooltip\n//               id=\"tooltip-top\"\n//               title=\"Tooltip on top\"\n//               placement=\"top\"\n//               classes={{ tooltip: classes.tooltip }}\n//             >\n//               <Button>On top</Button>\n//             </Tooltip>\n//             <Tooltip\n//               id=\"tooltip-bottom\"\n//               title=\"Tooltip on bottom\"\n//               placement=\"bottom\"\n//               classes={{ tooltip: classes.tooltip }}\n//             >\n//               <Button>On bottom</Button>\n//             </Tooltip>\n//             <Tooltip\n//               id=\"tooltip-right\"\n//               title=\"Tooltip on right\"\n//               placement=\"right\"\n//               classes={{ tooltip: classes.tooltip }}\n//             >\n//               <Button>On right</Button>\n//             </Tooltip>\n//           </GridItem>\n//         </GridContainer>\n//         <div className={classes.title}>\n//           <h3>Carousel</h3>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/views/Components/Sections/SectionJavascript.js"],"names":[],"mappingssourcesContent":["// import React from \"react\";\n// // react plugin for creating date-time-picker\n// import Datetime from \"react-datetime\";\n// // @material-ui/core components\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Slide from \"@material-ui/core/Slide\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import Dialog from \"@material-ui/core/Dialog\";\n// import DialogTitle from \"@material-ui/core/DialogTitle\";\n// import DialogContent from \"@material-ui/core/DialogContent\";\n// import DialogActions from \"@material-ui/core/DialogActions\";\n// import InputLabel from \"@material-ui/core/InputLabel\";\n// import FormControl from \"@material-ui/core/FormControl\";\n// import Tooltip from \"@material-ui/core/Tooltip\";\n// import Popover from \"@material-ui/core/Popover\";\n// // @material-ui/icons\n// import LibraryBooks from \"@material-ui/icons/LibraryBooks\";\n// import Close from \"@material-ui/icons/Close\";\n// // core components\n// import GridContainer from \"components/Grid/GridContainer.js\";\n// import GridItem from \"components/Grid/GridItem.js\";\n// import Button from \"components/CustomButtons/Button.js\";\n\n// import styles from \"assets/jss/material-kit-react/views/componentsSections/javascriptStyles.js\";\n\n// const useStyles = makeStyles(styles);\n\n// const Transition = React.forwardRef(function Transition(props, ref) {\n//   return <Slide direction=\"down\" ref={ref} {...props} />;\n// });\n\n// Transition.displayName = \"Transition\";\n\n// export default function SectionJavascript() {\n//   const classes = useStyles();\n//   const [anchorElLeft, setAnchorElLeft] = React.useState(null);\n//   const [anchorElTop, setAnchorElTop] = React.useState(null);\n//   const [anchorElBottom, setAnchorElBottom] = React.useState(null);\n//   const [anchorElRight, setAnchorElRight] = React.useState(null);\n//   const [classicModal, setClassicModal] = React.useState(false);\n//   return (\n//     <div className={classes.section}>\n//       <div className={classes.container}>\n//         <div className={classes.title}>\n//           <h2>Javascript components</h2>\n//         </div>\n//         <GridContainer>\n//           <GridItem xs={12} sm={12} md={6}>\n//             <div className={classes.title}>\n//               <h3>Modal</h3>\n//             </div>\n//             <GridContainer>\n//               <GridItem xs={12} sm={12} md={6} lg={4}>\n//                 <Button\n//                   color=\"primary\"\n//                   block\n//                   onClick={() => setClassicModal(true)}\n//                 >\n//                   <LibraryBooks className={classes.icon} />\n//                   Classic\n//                 </Button>\n//                 <Dialog\n//                   classes={{\n//                     root: classes.center,\n//                     paper: classes.modal\n//                   }}\n//                   open={classicModal}\n//                   TransitionComponent={Transition}\n//                   keepMounted\n//                   onClose={() => setClassicModal(false)}\n//                   aria-labelledby=\"classic-modal-slide-title\"\n//                   aria-describedby=\"classic-modal-slide-description\"\n//                 >\n//                   <DialogTitle\n//                     id=\"classic-modal-slide-title\"\n//                     disableTypography\n//                     className={classes.modalHeader}\n//                   >\n//                     <IconButton\n//                       className={classes.modalCloseButton}\n//                       key=\"close\"\n//                       aria-label=\"Close\"\n//                       color=\"inherit\"\n//                       onClick={() => setClassicModal(false)}\n//                     >\n//                       <Close className={classes.modalClose} />\n//                     </IconButton>\n//                     <h4 className={classes.modalTitle}>Modal title</h4>\n//                   </DialogTitle>\n//                   <DialogContent\n//                     id=\"classic-modal-slide-description\"\n//                     className={classes.modalBody}\n//                   >\n//                     <p>\n//                       Far far away, behind the word mountains, far from the\n//                       countries Vokalia and Consonantia, there live the blind\n//                       texts. Separated they live in Bookmarksgrove right at the\n//                       coast of the Semantics, a large language ocean. A small\n//                       river named Duden flows by their place and supplies it\n//                       with the necessary regelialia. It is a paradisematic\n//                       country, in which roasted parts of sentences fly into your\n//                       mouth. Even the all-powerful Pointing has no control about\n//                       the blind texts it is an almost unorthographic life One\n//                       day however a small line of blind text by the name of\n//                       Lorem Ipsum decided to leave for the far World of Grammar.\n//                     </p>\n//                   </DialogContent>\n//                   <DialogActions className={classes.modalFooter}>\n//                     <Button color=\"transparent\" simple>\n//                       Nice Button\n//                     </Button>\n//                     <Button\n//                       onClick={() => setClassicModal(false)}\n//                       color=\"danger\"\n//                       simple\n//                     >\n//                       Close\n//                     </Button>\n//                   </DialogActions>\n//                 </Dialog>\n//               </GridItem>\n//             </GridContainer>\n//             <GridItem xs={12} sm={12} md={12}>\n//               <div className={classes.title}>\n//                 <h3>Datetime Picker</h3>\n//               </div>\n//               <GridContainer>\n//                 <GridItem xs={12} sm={12} md={6}>\n//                   <InputLabel className={classes.label}>\n//                     Datetime Picker\n//                   </InputLabel>\n//                   <br />\n//                   <FormControl fullWidth>\n//                     <Datetime\n//                       inputProps={{ placeholder: \"Datetime Picker Here\" }}\n//                     />\n//                   </FormControl>\n//                 </GridItem>\n//               </GridContainer>\n//             </GridItem>\n//           </GridItem>\n//           <GridItem xs={12} sm={12} md={6}>\n//             <div className={classes.title}>\n//               <h3>Popovers</h3>\n//             </div>\n//             <Button onClick={event => setAnchorElLeft(event.currentTarget)}>\n//               On left\n//             </Button>\n//             <Popover\n//               classes={{\n//                 paper: classes.popover\n//               }}\n//               open={Boolean(anchorElLeft)}\n//               anchorEl={anchorElLeft}\n//               onClose={() => setAnchorElLeft(null)}\n//               anchorOrigin={{\n//                 vertical: \"center\",\n//                 horizontal: \"left\"\n//               }}\n//               transformOrigin={{\n//                 vertical: \"center\",\n//                 horizontal: \"right\"\n//               }}\n//             >\n//               <h3 className={classes.popoverHeader}>Popover on left</h3>\n//               <div className={classes.popoverBody}>\n//                 Here will be some very useful information about his popover.\n//                 Here will be some very useful information about his popover.\n//               </div>\n//             </Popover>\n//             <Button onClick={event => setAnchorElTop(event.currentTarget)}>\n//               On top\n//             </Button>\n//             <Popover\n//               classes={{\n//                 paper: classes.popover\n//               }}\n//               open={Boolean(anchorElTop)}\n//               anchorEl={anchorElTop}\n//               onClose={() => setAnchorElTop(null)}\n//               anchorOrigin={{\n//                 vertical: \"top\",\n//                 horizontal: \"center\"\n//               }}\n//               transformOrigin={{\n//                 vertical: \"bottom\",\n//                 horizontal: \"center\"\n//               }}\n//             >\n//               <h3 className={classes.popoverHeader}>Popover on top</h3>\n//               <div className={classes.popoverBody}>\n//                 Here will be some very useful information about his popover.\n//               </div>\n//             </Popover>\n//             <Button onClick={event => setAnchorElBottom(event.currentTarget)}>\n//               On bottom\n//             </Button>\n//             <Popover\n//               classes={{\n//                 paper: classes.popover\n//               }}\n//               open={Boolean(anchorElBottom)}\n//               anchorEl={anchorElBottom}\n//               onClose={() => setAnchorElBottom(null)}\n//               anchorOrigin={{\n//                 vertical: \"bottom\",\n//                 horizontal: \"center\"\n//               }}\n//               transformOrigin={{\n//                 vertical: \"top\",\n//                 horizontal: \"center\"\n//               }}\n//             >\n//               <h3 className={classes.popoverHeader}>Popover on bottom</h3>\n//               <div className={classes.popoverBody}>\n//                 Here will be some very useful information about his popover.\n//               </div>\n//             </Popover>\n//             <Button onClick={event => setAnchorElRight(event.currentTarget)}>\n//               On right\n//             </Button>\n//             <Popover\n//               classes={{\n//                 paper: classes.popover\n//               }}\n//               open={Boolean(anchorElRight)}\n//               anchorEl={anchorElRight}\n//               onClose={() => setAnchorElRight(null)}\n//               anchorOrigin={{\n//                 vertical: \"center\",\n//                 horizontal: \"right\"\n//               }}\n//               transformOrigin={{\n//                 vertical: \"center\",\n//                 horizontal: \"left\"\n//               }}\n//             >\n//               <h3 className={classes.popoverHeader}>Popover on right</h3>\n//               <div className={classes.popoverBody}>\n//                 Here will be some very useful information about his popover.\n//               </div>\n//             </Popover>\n//             <br />\n//             <br />\n//             <div className={classes.title}>\n//               <h3>Tooltips</h3>\n//             </div>\n//             <Tooltip\n//               id=\"tooltip-left\"\n//               title=\"Tooltip on left\"\n//               placement=\"left\"\n//               classes={{ tooltip: classes.tooltip }}\n//             >\n//               <Button>On left</Button>\n//             </Tooltip>\n//             <Tooltip\n//               id=\"tooltip-top\"\n//               title=\"Tooltip on top\"\n//               placement=\"top\"\n//               classes={{ tooltip: classes.tooltip }}\n//             >\n//               <Button>On top</Button>\n//             </Tooltip>\n//             <Tooltip\n//               id=\"tooltip-bottom\"\n//               title=\"Tooltip on bottom\"\n//               placement=\"bottom\"\n//               classes={{ tooltip: classes.tooltip }}\n//             >\n//               <Button>On bottom</Button>\n//             </Tooltip>\n//             <Tooltip\n//               id=\"tooltip-right\"\n//               title=\"Tooltip on right\"\n//               placement=\"right\"\n//               classes={{ tooltip: classes.tooltip }}\n//             >\n//               <Button>On right</Button>\n//             </Tooltip>\n//           </GridItem>\n//         </GridContainer>\n//         <div className={classes.title}>\n//           <h3>Carousel</h3>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}