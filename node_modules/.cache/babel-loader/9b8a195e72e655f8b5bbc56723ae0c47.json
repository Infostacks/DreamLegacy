{"ast":null,"code":"import _regeneratorRuntime from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/views/States/States.js\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\";\nimport { getMega } from '../../Services/Pool'; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport { Grid } from \"@material-ui/core\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\"; // import HeaderLinks from \"components/Header/HeaderLinks.js\";\n\nimport Parallax from \"components/Parallax/Parallax.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-kit-react/views/landingPage.js\";\nimport { Divider } from \"@material-ui/core\";\nimport _ from \"lodash\";\nvar dashboardRoutes = [];\nvar useStyles = makeStyles(styles);\nexport default function States(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      states1 = _useState2[0],\n      setStates = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectState = _useState4[0],\n      setSelectedStates = _useState4[1];\n\n  function statesdata() {}\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var poolsdata, statesdata;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getMega();\n\n          case 2:\n            poolsdata = _context.sent;\n            console.log('hello', poolsdata);\n            statesdata = // let states = _.map(poolsdata.data.s, (state, index) => {\n            //   return { label: state.i.sn, abbr: state.i.s, key: index };\n            // });\n            // if (states && !_.isEmpty(states)) {\n            setStates(poolsdata); // }\n            // console.log(\"states data\", states);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  var rest = Object.assign({}, props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, Object.assign({\n    color: \"transparent\",\n    routes: dashboardRoutes // rightLinks={<HeaderLinks />}\n    ,\n    fixed: true,\n    changeColorOnScroll: {\n      height: 90,\n      color: \"grey\"\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Parallax, {\n    filter: true,\n    image: require(\"assets/img/US-Map.jpg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, states1 && states1.data && states1.data.s && states1.data.s.map(function (y, index) {\n    return /*#__PURE__*/React.createElement(Button, {\n      onClick: statesdata,\n      style: {\n        background: \"#22223b\",\n        align: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, y.i.sn, \", \", y.i.s);\n  }))), /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: '250px',\n      display: 'contents'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/views/States/States.js"],"names":["React","useEffect","useState","classNames","getMega","makeStyles","Header","Footer","Grid","GridContainer","GridItem","Button","Parallax","Card","CardBody","CardFooter","styles","Divider","_","dashboardRoutes","useStyles","States","props","classes","states1","setStates","selectState","setSelectedStates","statesdata","poolsdata","console","log","rest","height","color","require","container","data","s","map","y","index","background","align","i","sn","width","display"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\nimport {getMega} from '../../Services/Pool'\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport { Grid } from \"@material-ui/core\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n// import HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Parallax from \"components/Parallax/Parallax.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-kit-react/views/landingPage.js\";\nimport { Divider } from \"@material-ui/core\";\nimport _ from \"lodash\";\n\n\nconst dashboardRoutes = [];\n\nconst useStyles = makeStyles(styles);\n\n\nexport default function States(props) {\n  const classes = useStyles();\n  const [states1, setStates] = useState();\n  const [selectState, setSelectedStates]=useState();\n\n  function statesdata(){}\n\n  useEffect(async () => {\n    const poolsdata = await getMega();\n    console.log('hello',poolsdata)\n    let statesdata = \n    // let states = _.map(poolsdata.data.s, (state, index) => {\n    //   return { label: state.i.sn, abbr: state.i.s, key: index };\n    // });\n    // if (states && !_.isEmpty(states)) {\n      setStates(poolsdata);\n    // }\n    // console.log(\"states data\", states);\n  }, []);\n\n  const { ...rest } = props;\n  return (\n    <div>\n      <Header\n        color=\"transparent\"\n        routes={dashboardRoutes}\n        // rightLinks={<HeaderLinks />}\n        fixed\n        changeColorOnScroll={{\n          height: 90,\n          color: \"grey\",\n        }}\n        {...rest}\n      />\n      <Parallax filter image={require(\"assets/img/US-Map.jpg\")}>\n        <div className={classes.container}>\n        {states1 && states1.data && states1.data.s && \n          states1.data.s .map((y, index) => (\n            <Button \n            onClick={statesdata} \n\n            style={{ background: \"#22223b\", align: \"center\" }}>\n              {y.i.sn}, {y.i.s}\n            </Button>\n          ))}\n        </div>\n      </Parallax>\n      <Card style={{width:'250px',display:'contents'}}>\n       \n      </Card>\n      <Footer />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}