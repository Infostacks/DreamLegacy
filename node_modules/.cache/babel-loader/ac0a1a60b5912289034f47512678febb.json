{"ast":null,"code":"import _regeneratorRuntime from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/views/States/States.js\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\";\nimport { getMega } from '../../Services/Pool'; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport { Grid } from \"@material-ui/core\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\"; // import HeaderLinks from \"components/Header/HeaderLinks.js\";\n\nimport Parallax from \"components/Parallax/Parallax.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-kit-react/views/landingPage.js\";\nimport { Divider } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport * as dataActions from '../../Store/Actions/Index';\nimport { getMegaData } from '../../Store/Actions/Index';\nvar dashboardRoutes = [];\nvar useStyles = makeStyles(styles);\n\nfunction States(props) {\n  var _this = this;\n\n  var classes = useStyles();\n  var history = useHistory();\n\n  var setState = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var statesPath;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return props.setSelectedData(data);\n\n            case 2:\n              statesPath = \"/states-page\";\n              history.push(statesPath);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function setState(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return props.getPoolsData();\n\n            case 2:\n              _context2.next = 4;\n              return props.getMegaData();\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }, []); // useEffect(async () => {\n  //   const poolsdata = await getMega();\n  //   console.log('hello', props.pools &&  props.pools)\n  //   // console.log('hello',poolsdata)\n  //   let states = _.map(poolsdata.data.s, (state, index) => {\n  //     return { label: state.i.sn, abbr: state.i.s, key: index };\n  //   });\n  //   if (states && !_.isEmpty(states)) {\n  //     setStates(states);\n  //   }\n  //   console.log(\"states data\", states);\n  // }, []);\n  // const { ...rest } = props;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    color: \"transparent\",\n    routes: dashboardRoutes // rightLinks={<HeaderLinks />}\n    ,\n    fixed: true,\n    changeColorOnScroll: {\n      height: 90\n    } // {...rest}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Parallax, {\n    filter: true,\n    image: require(\"assets/img/US-Map.jpg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, props.mega && props.mega.map(function (y, index) {\n    return /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick() {\n        return setState(y);\n      },\n      style: {\n        background: \"#22223b\",\n        align: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, y.i.sn, \", \", y.i.s);\n  }))), /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: '250px',\n      display: 'contents'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log('state', state);\n  return {\n    pools: state && state.data && state.data.poolsData && state.data.poolsData.data,\n    mega: state && state.data && state.data.megaData && state.data.megaData.data && state.data.megaData.data.s\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getPoolsData: function getPoolsData() {\n      return dispatch(dataActions.getPoolsData());\n    },\n    getMegaData: function getMegaData() {\n      return dispatch(dataActions.getMegaData());\n    },\n    setSelectedData: function setSelectedData(payload) {\n      return dispatch(dataActions.setSelectedState(payload));\n    }\n  };\n}; // // Exports\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(States);","map":{"version":3,"sources":["/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/views/States/States.js"],"names":["React","useEffect","useState","classNames","getMega","makeStyles","Header","Footer","Grid","GridContainer","GridItem","Button","Parallax","Card","CardBody","CardFooter","styles","Divider","connect","_","useHistory","dataActions","getMegaData","dashboardRoutes","useStyles","States","props","classes","history","setState","data","setSelectedData","statesPath","push","getPoolsData","height","require","container","mega","map","y","index","background","align","i","sn","s","width","display","mapStateToProps","state","console","log","pools","poolsData","megaData","mapDispatchToProps","dispatch","payload","setSelectedState"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\nimport {getMega} from '../../Services/Pool'\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport { Grid } from \"@material-ui/core\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n// import HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Parallax from \"components/Parallax/Parallax.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-kit-react/views/landingPage.js\";\nimport { Divider } from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport _ from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport * as dataActions from '../../Store/Actions/Index'\nimport { getMegaData } from '../../Store/Actions/Index'\n\n\nconst dashboardRoutes = [];\n\nconst useStyles = makeStyles(styles);\n\n\nfunction States(props) {\n  const classes = useStyles();\n  const history = useHistory();\n\n\n    \n\n  const setState = async (data) => {\n    await props.setSelectedData(data)\n    let statesPath= \"/states-page\";\n    history.push(statesPath)\n\n  \n  }\n\n  useEffect(()=>{\n    (async() => {\n    // await props.getPoolsData();\n    // const poolsResult = await getpools();\n    // setpools(poolsResult.data)\n    await props.getPoolsData();\n    await props.getMegaData();\n    \n    \n    // console.log('megadata',megaResult.data)\n\n    \n\n  })();\n},[]);\n\n  // useEffect(async () => {\n    \n  //   const poolsdata = await getMega();\n  //   console.log('hello', props.pools &&  props.pools)\n  //   // console.log('hello',poolsdata)\n  //   let states = _.map(poolsdata.data.s, (state, index) => {\n  //     return { label: state.i.sn, abbr: state.i.s, key: index };\n  //   });\n  //   if (states && !_.isEmpty(states)) {\n  //     setStates(states);\n  //   }\n  //   console.log(\"states data\", states);\n  // }, []);\n\n  // const { ...rest } = props;\n  return (\n    <div>\n      <Header\n        color=\"transparent\"\n        routes={dashboardRoutes}\n        // rightLinks={<HeaderLinks />}\n        fixed\n        changeColorOnScroll={{\n          height: 90,\n          \n        }}\n        // {...rest}\n      />\n      <Parallax filter image={require(\"assets/img/US-Map.jpg\")}>\n        <div className={classes.container}>\n        {props.mega &&\n          props.mega.map((y, index) => (\n            <Button onClick={()=> setState(y)} style={{ background: \"#22223b\", align: \"center\" }}>\n              {y.i.sn}, {y.i.s}\n            </Button>\n          ))}\n        </div>\n          {/* <div className={classes.container}>\n        {states1 && states1.data && states1.data.s poolsdata.data.s\n          states1.map((y, index) => (\n            <Button onClick={statesdata} style={{ background: \"#22223b\", align: \"center\" }}>\n              {y.label}, {y.abbr}\n            </Button>\n          ))}\n        // </div> */}\n      </Parallax>\n      <Card style={{width:'250px',display:'contents'}}>\n       \n      </Card>\n      <Footer />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  console.log('state', state)\n  return {\n    pools: state && state.data && state.data.poolsData && state.data.poolsData.data, \n    mega: state && state.data && state.data.megaData && state.data.megaData.data && \n   state.data.megaData.data.s \n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getPoolsData:() => dispatch(dataActions.getPoolsData()),\n    getMegaData:() => dispatch(dataActions.getMegaData()),\n  setSelectedData: (payload) => dispatch(dataActions.setSelectedState(payload))\n   }\n\n};\n// // Exports\nexport default connect(mapStateToProps, mapDispatchToProps)(States);"]},"metadata":{},"sourceType":"module"}