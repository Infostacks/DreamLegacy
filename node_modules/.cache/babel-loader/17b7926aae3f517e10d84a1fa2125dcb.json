{"ast":null,"code":"import _slicedToArray from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/components/Header/Header.js\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert'; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { Grid } from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from '@material-ui/core/Box'; // @material-ui/icons\n\nimport Menu from \"@material-ui/icons/Menu\";\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'; // core components\n\nimport styles from \"assets/jss/material-kit-react/components/headerStyle.js\";\nimport { useHistory } from \"react-router-dom\";\nvar useStyles = makeStyles(styles);\nexport default function Header(props) {\n  var _this = this;\n\n  var ITEM_HEIGHT = 48;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var open = Boolean(anchorEl);\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var history = useHistory();\n  var options = ['HOME', 'POWERBALL', 'MEGAMILLIONS', 'STATE NUMBERS', 'LOG IN', 'SIGN UP']; // const homeRoute=() =>{\n  //   let homePath=\"/landing-page\";\n  //   history.push(homePath);\n  // }\n  // const signUpRoute = () => {\n  //   let signPath= \"/signup\";\n  //   history.push(signPath);\n  // }\n  // const logInRoute = () => {\n  //   let loginPath= \"/login\";\n  //   history.push(loginPath);\n  // }\n  // const powerRoute = () => {\n  //   let powerPath= \"/powerball\";\n  //   history.push(powerPath);\n  // }\n  // const stateRoute=() =>{\n  //   let statePath=\"/states\";\n  //   history.push(statePath);\n  // }\n  // const megaRoute = () => {\n  //   let megaPath= \"megamillions\";\n  //   history.push(megaPath);\n  // }\n  // const classes = useStyles();\n  // const [mobileOpen, setMobileOpen] = React.useState(false);\n  // React.useEffect(() => {\n  //   if (props.changeColorOnScroll) {\n  //     window.addEventListener(\"scroll\", headerColorChange);\n  //   }\n  //   return function cleanup() {\n  //     if (props.changeColorOnScroll) {\n  //       window.removeEventListener(\"scroll\", headerColorChange);\n  //     }\n  //   };\n  // });\n  // const handleDrawerToggle = () => {\n  //   setMobileOpen(!mobileOpen);\n  // };\n  // const headerColorChange = () => {\n  //   const { color, changeColorOnScroll } = props;\n  //   const windowsScrollTop = window.pageYOffset;\n  //   if (windowsScrollTop > changeColorOnScroll.height) {\n  //     document.body\n  //       .getElementsByTagName(\"header\")[0]\n  //       .classList.remove(classes[color]);\n  //     document.body\n  //       .getElementsByTagName(\"header\")[0]\n  //       .classList.add(classes[changeColorOnScroll.color]);\n  //   } else {\n  //     document.body\n  //       .getElementsByTagName(\"header\")[0]\n  //       .classList.add(classes[color]);\n  //     document.body\n  //       .getElementsByTagName(\"header\")[0]\n  //       .classList.remove(classes[changeColorOnScroll.color]);\n  //   }\n  // };\n  // const { color, rightLinks, leftLinks, brand, fixed, absolute } = props;\n  // const appBarClasses = classNames({\n  //   [classes.appBar]: true,\n  //   [classes[color]]: \"blue\",\n  //   [classes.absolute]: absolute,\n  //   [classes.fixed]: fixed\n  // });\n  // const brandComponent = <Button className={classes.title}>{brand}</Button>;\n\n  return (\n    /*#__PURE__*/\n    //     <Grid lg={4} xs={12} md={6}> \n    //     <AppBar className={appBarClasses}>\n    //       <Toolbar className={classes.container}>\n    //         <GridItem lg={4} xs={12} md={6}>\n    //         <Box display='flex' flexGrow={4}>\n    //           <Button href=\"#top\" onClick={homeRoute} style={{backgroundColor : \"#f4a261\"}}>Home</Button>\n    //           <div>-</div>\n    //           <Button href=\"#top\" onClick={powerRoute} style={{backgroundColor : \"#f4a261\"}}>Powerball</Button>\n    //           <div>-</div>\n    //           <Button href=\"#top\" onClick={megaRoute} style={{backgroundColor : \"#f4a261\"}}>Megamillions</Button>\n    //           <div>-</div>\n    //           <Button href=\"#top\" onClick={stateRoute} style={{backgroundColor : \"#f4a261\"}}>State numbers</Button>\n    //         </Box>\n    //         </GridItem>\n    //           <Button href=\"#top\" onClick={logInRoute} endIcon={<AccountCircleIcon/>} style={{backgroundColor : \"#f4a261\"}}>Log In</Button>\n    //           <div>-</div>\n    //           <Button href=\"#top\" onClick={signUpRoute} endIcon={<AssignmentIndIcon/>} style={{backgroundColor : \"#f4a261\"}}>Sign Up</Button>\n    //           <div>-</div>\n    //         {leftLinks !== undefined ? brandComponent : null}\n    //         <div className={classes.flex}>\n    //           {leftLinks !== undefined ? (\n    //             <Hidden smDown implementation=\"css\">\n    //               {leftLinks}\n    //             </Hidden>\n    //           ) : (\n    //               brandComponent\n    //             )}\n    //         </div>\n    //         <Hidden smDown implementation=\"css\">\n    //           {rightLinks}\n    //         </Hidden>\n    //         <Hidden mdUp>\n    //           <IconButton\n    //             background=\"blue\"\n    //             aria-label=\"open drawer\"\n    //             onClick={handleDrawerToggle}\n    //           >\n    //             <Menu />\n    //           </IconButton>\n    //         </Hidden>\n    //       </Toolbar>\n    //       {/* <Hidden mdUp implementation=\"js\"> */}\n    //         <Drawer\n    //           variant=\"temporary\"\n    //           anchor={\"right\"}\n    //           open={mobileOpen}\n    //           classes={{\n    //             paper: classes.drawerPaper\n    //           }}\n    //           onClose={handleDrawerToggle}\n    //         >\n    //           <div className={classes.appResponsive}>\n    //             {leftLinks}\n    //             {rightLinks}\n    //           </div>\n    //         </Drawer>\n    //       {/* </Hidden> */}\n    //     </AppBar>\n    //     </Grid>\n    //   );\n    // }\n    // Header.defaultProp = {\n    //   color: \"white\"\n    // };\n    // Header.propTypes = {\n    //   color: PropTypes.oneOf([\n    //     \"primary\",\n    //     \"info\",\n    //     \"success\",\n    //     \"warning\",\n    //     \"danger\",\n    //     \"transparent\",\n    //     \"white\",\n    //     \"rose\",\n    //     \"dark\"\n    //   ]),\n    //   rightLinks: PropTypes.node,\n    //   leftLinks: PropTypes.node,\n    //   brand: PropTypes.string,\n    //   fixed: PropTypes.bool,\n    //   absolute: PropTypes.bool,\n    //   // this will cause the sidebar to change the color from\n    //   // props.color (see above) to changeColorOnScroll.color\n    //   // when the window.pageYOffset is heigher or equal to\n    //   // changeColorOnScroll.height and then when it is smaller than\n    //   // changeColorOnScroll.height change it back to\n    //   // props.color (see above)\n    //   changeColorOnScroll: PropTypes.shape({\n    //     height: PropTypes.number.isRequired,\n    //     color: PropTypes.oneOf([\n    //       \"primary\",\n    //       \"info\",\n    //       \"success\",\n    //       \"warning\",\n    //       \"danger\",\n    //       \"transparent\",\n    //       \"white\",\n    //       \"rose\",\n    //       \"dark\"\n    //     ]).isRequired\n    //   })\n    // };\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"more\",\n      \"aria-controls\": \"long-menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Menu, {\n      id: \"long-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: open,\n      onClose: handleClose,\n      PaperProps: {\n        style: {\n          maxHeight: ITEM_HEIGHT * 4.5,\n          width: '20ch'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 7\n      }\n    }, options.map(function (option) {\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        key: option,\n        selected: option === 'Pyxis',\n        onClick: handleClose,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }\n      }, option);\n    })))\n  );\n}","map":{"version":3,"sources":["/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/components/Header/Header.js"],"names":["React","classNames","MenuItem","MoreVertIcon","PropTypes","Grid","GridItem","makeStyles","AppBar","Toolbar","IconButton","Button","Hidden","Drawer","Box","Menu","AssignmentIndIcon","AccountCircleIcon","styles","useHistory","useStyles","Header","props","ITEM_HEIGHT","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","history","options","style","maxHeight","width","map","option"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,6BAAzB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,yDAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,IAAMC,SAAS,GAAGb,UAAU,CAACW,MAAD,CAA5B;AAEA,eAAe,SAASG,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAEpC,MAAMC,WAAW,GAAG,EAApB;;AAFoC,wBAIJvB,KAAK,CAACwB,QAAN,CAAe,IAAf,CAJI;AAAA;AAAA,MAI7BC,QAJ6B;AAAA,MAInBC,WAJmB;;AAKpC,MAAMC,IAAI,GAAGC,OAAO,CAACH,QAAD,CAApB;;AAEA,MAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7BJ,IAAAA,WAAW,CAACI,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,MAAMO,OAAO,GAAGd,UAAU,EAA1B;AAEA,MAAMe,OAAO,GAAG,CACd,MADc,EAEd,WAFc,EAGd,cAHc,EAId,eAJc,EAKd,QALc,EAMd,SANc,CAAhB,CAjBoC,CA0BpoBACM,oBAAC,UAAD;AACE,oBAAW,MADb;AAEE,uBAAc,WAFhB;AAGE,uBAAc,MAHhB;AAIE,MAAA,OAAO,EAAEL,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADN,eASM,oBAAC,IAAD;AACE,MAAA,EAAE,EAAC,WADL;AAEE,MAAA,QAAQ,EAAEJ,QAFZ;AAGE,MAAA,WAAW,MAHb;AAIE,MAAA,IAAI,EAAEE,IAJR;AAKE,MAAA,OAAO,EAAEK,WALX;AAME,MAAA,UAAU,EAAE;AACVG,QAAAA,KAAK,EAAE;AACLC,UAAAA,SAAS,EAAEb,WAAW,GAAG,GADpB;AAELc,UAAAA,KAAK,EAAE;AAFF;AADG,OANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaGH,OAAO,CAACI,GAAR,CAAY,UAACC,MAAD;AAAA,0BACX,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,MAAf;AAAuB,QAAA,QAAQ,EAAEA,MAAM,KAAK,OAA5C;AAAqD,QAAA,OAAO,EAAEP,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGO,MADH,CADW;AAAA,KAAZ,CAbH,CATN;AA5GE;AA0ID","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { Grid } from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from '@material-ui/core/Box';\n// @material-ui/icons\nimport Menu from \"@material-ui/icons/Menu\";\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n// core components\nimport styles from \"assets/jss/material-kit-react/components/headerStyle.js\";\nimport { useHistory } from \"react-router-dom\";\nconst useStyles = makeStyles(styles);\n\nexport default function Header(props) {\n\n  const ITEM_HEIGHT = 48;\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  \n  const history = useHistory();\n\n  const options = [\n    'HOME',\n    'POWERBALL',\n    'MEGAMILLIONS',\n    'STATE NUMBERS',\n    'LOG IN',\n    'SIGN UP',\n  ];\n\n  // const homeRoute=() =>{\n  //   let homePath=\"/landing-page\";\n  //   history.push(homePath);\n\n  // }\n  // const signUpRoute = () => {\n  //   let signPath= \"/signup\";\n  //   history.push(signPath);\n  \n  // }\n  \n  // const logInRoute = () => {\n  //   let loginPath= \"/login\";\n  //   history.push(loginPath);\n  \n  // }\n  // const powerRoute = () => {\n  //   let powerPath= \"/powerball\";\n  //   history.push(powerPath);\n  \n  // }\n\n  // const stateRoute=() =>{\n  //   let statePath=\"/states\";\n  //   history.push(statePath);\n\n  // }\n  \n  // const megaRoute = () => {\n  //   let megaPath= \"megamillions\";\n  //   history.push(megaPath);\n  \n  // }\n  // const classes = useStyles();\n  // const [mobileOpen, setMobileOpen] = React.useState(false);\n  // React.useEffect(() => {\n  //   if (props.changeColorOnScroll) {\n  //     window.addEventListener(\"scroll\", headerColorChange);\n  //   }\n  //   return function cleanup() {\n  //     if (props.changeColorOnScroll) {\n  //       window.removeEventListener(\"scroll\", headerColorChange);\n  //     }\n  //   };\n  // });\n  // const handleDrawerToggle = () => {\n  //   setMobileOpen(!mobileOpen);\n  // };\n  // const headerColorChange = () => {\n  //   const { color, changeColorOnScroll } = props;\n  //   const windowsScrollTop = window.pageYOffset;\n  //   if (windowsScrollTop > changeColorOnScroll.height) {\n  //     document.body\n  //       .getElementsByTagName(\"header\")[0]\n  //       .classList.remove(classes[color]);\n  //     document.body\n  //       .getElementsByTagName(\"header\")[0]\n  //       .classList.add(classes[changeColorOnScroll.color]);\n  //   } else {\n  //     document.body\n  //       .getElementsByTagName(\"header\")[0]\n  //       .classList.add(classes[color]);\n  //     document.body\n  //       .getElementsByTagName(\"header\")[0]\n  //       .classList.remove(classes[changeColorOnScroll.color]);\n  //   }\n  // };\n  // const { color, rightLinks, leftLinks, brand, fixed, absolute } = props;\n  // const appBarClasses = classNames({\n  //   [classes.appBar]: true,\n  //   [classes[color]]: \"blue\",\n  //   [classes.absolute]: absolute,\n  //   [classes.fixed]: fixed\n  // });\n  // const brandComponent = <Button className={classes.title}>{brand}</Button>;\n  return (\n//     <Grid lg={4} xs={12} md={6}> \n//     <AppBar className={appBarClasses}>\n    \n//       <Toolbar className={classes.container}>\n//         <GridItem lg={4} xs={12} md={6}>\n//         <Box display='flex' flexGrow={4}>\n//           <Button href=\"#top\" onClick={homeRoute} style={{backgroundColor : \"#f4a261\"}}>Home</Button>\n//           <div>-</div>\n//           <Button href=\"#top\" onClick={powerRoute} style={{backgroundColor : \"#f4a261\"}}>Powerball</Button>\n//           <div>-</div>\n//           <Button href=\"#top\" onClick={megaRoute} style={{backgroundColor : \"#f4a261\"}}>Megamillions</Button>\n//           <div>-</div>\n//           <Button href=\"#top\" onClick={stateRoute} style={{backgroundColor : \"#f4a261\"}}>State numbers</Button>\n//         </Box>\n//         </GridItem>\n//           <Button href=\"#top\" onClick={logInRoute} endIcon={<AccountCircleIcon/>} style={{backgroundColor : \"#f4a261\"}}>Log In</Button>\n//           <div>-</div>\n//           <Button href=\"#top\" onClick={signUpRoute} endIcon={<AssignmentIndIcon/>} style={{backgroundColor : \"#f4a261\"}}>Sign Up</Button>\n//           <div>-</div>\n\n//         {leftLinks !== undefined ? brandComponent : null}\n//         <div className={classes.flex}>\n//           {leftLinks !== undefined ? (\n//             <Hidden smDown implementation=\"css\">\n//               {leftLinks}\n//             </Hidden>\n//           ) : (\n//               brandComponent\n//             )}\n//         </div>\n//         <Hidden smDown implementation=\"css\">\n//           {rightLinks}\n//         </Hidden>\n//         <Hidden mdUp>\n//           <IconButton\n//             background=\"blue\"\n//             aria-label=\"open drawer\"\n//             onClick={handleDrawerToggle}\n//           >\n//             <Menu />\n//           </IconButton>\n//         </Hidden>\n//       </Toolbar>\n//       {/* <Hidden mdUp implementation=\"js\"> */}\n//         <Drawer\n//           variant=\"temporary\"\n//           anchor={\"right\"}\n//           open={mobileOpen}\n//           classes={{\n//             paper: classes.drawerPaper\n//           }}\n//           onClose={handleDrawerToggle}\n//         >\n//           <div className={classes.appResponsive}>\n//             {leftLinks}\n//             {rightLinks}\n//           </div>\n//         </Drawer>\n//       {/* </Hidden> */}\n//     </AppBar>\n//     </Grid>\n//   );\n// }\n\n// Header.defaultProp = {\n//   color: \"white\"\n// };\n\n// Header.propTypes = {\n//   color: PropTypes.oneOf([\n//     \"primary\",\n//     \"info\",\n//     \"success\",\n//     \"warning\",\n//     \"danger\",\n//     \"transparent\",\n//     \"white\",\n//     \"rose\",\n//     \"dark\"\n//   ]),\n//   rightLinks: PropTypes.node,\n//   leftLinks: PropTypes.node,\n//   brand: PropTypes.string,\n//   fixed: PropTypes.bool,\n//   absolute: PropTypes.bool,\n//   // this will cause the sidebar to change the color from\n//   // props.color (see above) to changeColorOnScroll.color\n//   // when the window.pageYOffset is heigher or equal to\n//   // changeColorOnScroll.height and then when it is smaller than\n//   // changeColorOnScroll.height change it back to\n//   // props.color (see above)\n//   changeColorOnScroll: PropTypes.shape({\n//     height: PropTypes.number.isRequired,\n//     color: PropTypes.oneOf([\n//       \"primary\",\n//       \"info\",\n//       \"success\",\n//       \"warning\",\n//       \"danger\",\n//       \"transparent\",\n//       \"white\",\n//       \"rose\",\n//       \"dark\"\n//     ]).isRequired\n//   })\n// };\n\n<div>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            maxHeight: ITEM_HEIGHT * 4.5,\n            width: '20ch',\n          },\n        }}\n      >\n        {options.map((option) => (\n          <MenuItem key={option} selected={option === 'Pyxis'} onClick={handleClose}>\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}