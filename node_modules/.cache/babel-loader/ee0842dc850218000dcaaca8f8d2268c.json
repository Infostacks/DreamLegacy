{"ast":null,"code":"import _regeneratorRuntime from\"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{signup}from'Services/Authentication';// @material-ui/core components\nimport{makeStyles}from\"@material-ui/core/styles\";import InputAdornment from\"@material-ui/core/InputAdornment\";import Icon from\"@material-ui/core/Icon\";// @material-ui/icons\nimport Email from\"@material-ui/icons/Email\";import People from\"@material-ui/icons/People\";// core components\nimport Header from\"components/Header/Header.js\";import HeaderLinks from\"components/Header/HeaderLinks.js\";import Footer from\"components/Footer/Footer.js\";import GridContainer from\"components/Grid/GridContainer.js\";import GridItem from\"components/Grid/GridItem.js\";import Button from\"components/CustomButtons/Button.js\";import Card from\"components/Card/Card.js\";import CardBody from\"components/Card/CardBody.js\";import CardHeader from\"components/Card/CardHeader.js\";import CardFooter from\"components/Card/CardFooter.js\";import CustomInput from\"components/CustomInput/CustomInput.js\";import styles from\"assets/jss/material-kit-react/views/SignUpPage.js\";import image from\"assets/img/bg7.jpg\";var useStyles=makeStyles(styles);export default function SignUpPage(props){var _React$useState=React.useState(\"cardHidden\"),_React$useState2=_slicedToArray(_React$useState,2),cardAnimaton=_React$useState2[0],setCardAnimation=_React$useState2[1];var _React$useState3=React.useState('Enter Your Email'),_React$useState4=_slicedToArray(_React$useState3,2),email=_React$useState4[0],setEmail=_React$useState4[1];var _useState=useState(''),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var _React$useState5=React.useState(''),_React$useState6=_slicedToArray(_React$useState5,2),passwordError=_React$useState6[0],setPasswordError=_React$useState6[1];var _React$useState7=React.useState(''),_React$useState8=_slicedToArray(_React$useState7,2),emailError=_React$useState8[0],setEmailError=_React$useState8[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setisLoading=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),firstname=_useState6[0],setFirstname=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),lastname=_useState8[0],setLastname=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),responseError=_useState10[0],setresponseError=_useState10[1];var _React$useState9=React.useState('Enter Your Email'),_React$useState10=_slicedToArray(_React$useState9,2),confirmpassword=_React$useState10[0],setConfirmPassword=_React$useState10[1];setTimeout(function(){setCardAnimation(\"\");},700);var classes=useStyles();var rest=Object.assign({},props);var valid=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(email.includes('@')){_context.next=4;break;}setEmailError(\"invalid Email\");_context.next=21;break;case 4:if(email.includes(\"@\")){_context.next=8;break;}setEmailError(\"invalid Email\");_context.next=21;break;case 8:if(email.includes(\".com\")){_context.next=12;break;}setEmailError(\"invalid Email\");_context.next=21;break;case 12:if(!(password.length<5)){_context.next=16;break;}setPasswordError(\"Invalid Password\");_context.next=21;break;case 16:if(!(password!=confirmpassword)){_context.next=20;break;}setPasswordError(\"Password not matched\");_context.next=21;break;case 20:return _context.abrupt(\"return\",true);case 21:case\"end\":return _context.stop();}}},_callee);}));return function valid(){return _ref.apply(this,arguments);};}();var getdata=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var data,signupResult;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:data={firstname:firstname,lastname:lastname,email:email,password:password,confirmpassword:confirmpassword// This is the body part\n};_context2.next=3;return signup(data);case 3:signupResult=_context2.sent;console.log('hello login result',signupResult);return _context2.abrupt(\"return\",signupResult);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function getdata(){return _ref2.apply(this,arguments);};}();var register=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var result;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setisLoading(\"true\");if(!valid()){_context3.next=8;break;}_context3.next=4;return getdata();case 4:result=_context3.sent;console.log('hello',result);localStorage.setItem('Token',result.token);if(result&&result.message==\"User Authenticated\"){setisLoading(\"false\");// props.history.push('/admin/Dashboard')\n}else{// this.notify(result.message, \"danger\")\nsetresponseError(\"result.message\");setisLoading(\"false\");}case 8:case\"end\":return _context3.stop();}}},_callee3);}));return function register(){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.pageHeader,style:{backgroundImage:\"url(\"+image+\")\",backgroundSize:\"cover\",backgroundPosition:\"top center\"}},/*#__PURE__*/React.createElement(\"div\",{className:classes.container},/*#__PURE__*/React.createElement(GridContainer,{justify:\"center\"},/*#__PURE__*/React.createElement(GridItem,{xs:12,sm:12,md:4},/*#__PURE__*/React.createElement(Card,{className:classes[cardAnimaton],style:{}},/*#__PURE__*/React.createElement(\"form\",{className:classes.form},/*#__PURE__*/React.createElement(CardHeader,{color:\"primary\",className:classes.cardHeader},/*#__PURE__*/React.createElement(\"h4\",null,\"Sign-up Form\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.socialLine},/*#__PURE__*/React.createElement(Button,{justIcon:true// href=\"#pablo\"\n,target:\"_blank\",color:\"transparent\",onClick:function onClick(e){return e.preventDefault();}},/*#__PURE__*/React.createElement(\"i\",{className:\"fab fa-twitter\"})),/*#__PURE__*/React.createElement(Button,{justIcon:true// href=\"#pablo\"\n,target:\"_blank\",color:\"transparent\",onClick:function onClick(e){return e.preventDefault();}},/*#__PURE__*/React.createElement(\"i\",{className:\"fab fa-facebook\"})),/*#__PURE__*/React.createElement(Button,{justIcon:true// href=\"#pablo\"\n,target:\"_blank\",color:\"transparent\",onClick:function onClick(e){return e.preventDefault();}},/*#__PURE__*/React.createElement(\"i\",{className:\"fab fa-google-plus-g\"})))),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(CustomInput,{labelText:\"First Name...\",id:\"first\",formControlProps:{fullWidth:true},value:firstname,onHandleChange:function onHandleChange(event){return setFirstname(event.target.value);},inputProps:{type:\"text\",endAdornment:/*#__PURE__*/React.createElement(InputAdornment,{position:\"end\"},/*#__PURE__*/React.createElement(People,{className:classes.inputIconsColor}))}}),/*#__PURE__*/React.createElement(CustomInput,{labelText:\"Last Name...\",id:\"last\",formControlProps:{fullWidth:true},value:lastname,onHandleChange:function onHandleChange(event){return setLastname(event.target.value);},inputProps:{type:\"text\",endAdornment:/*#__PURE__*/React.createElement(InputAdornment,{position:\"end\"},/*#__PURE__*/React.createElement(People,{className:classes.inputIconsColor}))}}),/*#__PURE__*/React.createElement(CustomInput,{labelText:\"Email...\",id:\"email\",formControlProps:{fullWidth:true},value:email,onHandleChange:function onHandleChange(event){return setEmail(event.target.value);},inputProps:{type:\"email\",endAdornment:/*#__PURE__*/React.createElement(InputAdornment,{position:\"end\"},/*#__PURE__*/React.createElement(Email,{className:classes.inputIconsColor}))}}),/*#__PURE__*/React.createElement(CustomInput,{labelText:\"Password\",id:\"pass\",formControlProps:{fullWidth:true},value:password,error:passwordError,onHandleChange:function onHandleChange(event){return setPassword(event.target.value);},inputProps:{type:\"password\",endAdornment:/*#__PURE__*/React.createElement(InputAdornment,{position:\"end\"},/*#__PURE__*/React.createElement(Icon,{className:classes.inputIconsColor},\"lock_outline\")),autoComplete:\"off\"}}),/*#__PURE__*/React.createElement(CustomInput,{labelText:\"Confirm Password\",id:\"pass\",formControlProps:{fullWidth:true},value:confirmpassword,onHandleChange:function onHandleChange(event){return setConfirmPassword(event.target.value);},inputProps:{type:\"password\",endAdornment:/*#__PURE__*/React.createElement(InputAdornment,{position:\"end\"},/*#__PURE__*/React.createElement(Icon,{className:classes.inputIconsColor},\"lock_outline\")),autoComplete:\"off\"}})),/*#__PURE__*/React.createElement(CardFooter,{className:classes.cardFooter},/*#__PURE__*/React.createElement(Button,{simple:true,color:\"primary\",size:\"lg\",onClick:function onClick(){return register();}},\"Register\")))))))));}","map":{"version":3,"sources":["/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/views/Signup/index.js"],"names":["React","useState","signup","makeStyles","InputAdornment","Icon","Email","People","Header","HeaderLinks","Footer","GridContainer","GridItem","Button","Card","CardBody","CardHeader","CardFooter","CustomInput","styles","image","useStyles","SignUpPage","props","cardAnimaton","setCardAnimation","email","setEmail","password","setPassword","passwordError","setPasswordError","emailError","setEmailError","isLoading","setisLoading","firstname","setFirstname","lastname","setLastname","responseError","setresponseError","confirmpassword","setConfirmPassword","setTimeout","classes","rest","valid","includes","length","getdata","data","signupResult","console","log","register","result","localStorage","setItem","token","message","pageHeader","backgroundImage","backgroundSize","backgroundPosition","container","form","cardHeader","socialLine","e","preventDefault","fullWidth","event","target","value","type","endAdornment","inputIconsColor","autoComplete","cardFooter"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { signup } from 'Services/Authentication';\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\";\n// core components\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\n\nimport styles from \"assets/jss/material-kit-react/views/SignUpPage.js\";\n\nimport image from \"assets/img/bg7.jpg\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function SignUpPage(props) {\n    const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n    const [email, setEmail] = React.useState('Enter Your Email');\n    const [password, setPassword] = useState('');\n    const [passwordError, setPasswordError] = React.useState('');\n    const [emailError, setEmailError] = React.useState('');\n    const [isLoading, setisLoading] = useState('');\n    const [firstname, setFirstname] = useState('');\n    const [lastname, setLastname] = useState('');\n    const [responseError, setresponseError] = useState('');\n    const [confirmpassword, setConfirmPassword] = React.useState('Enter Your Email');\n    setTimeout(function () {\n        setCardAnimation(\"\");\n    }, 700);\n    const classes = useStyles();\n    const { ...rest } = props;\n    const valid = async () => {\n        if (!email.includes('@')) {\n            setEmailError(\"invalid Email\")\n        }\n        else if (!email.includes(\"@\")) {\n            setEmailError(\"invalid Email\")\n        }\n        else if (!email.includes(\".com\")) {\n            setEmailError(\"invalid Email\")\n        }\n        else if (password.length < 5) {\n            setPasswordError(\"Invalid Password\")\n\n        }\n        else if (password != confirmpassword) {\n            setPasswordError(\"Password not matched\")\n        }\n        else {\n            return true;\n        }\n    }\n\n\n\n    const getdata = async () => {\n        const data = {\n            firstname: firstname,\n            lastname: lastname,\n            email: email,\n            password: password,\n            confirmpassword: confirmpassword // This is the body part\n        }\n        const signupResult = await signup(data);\n        console.log('hello login result', signupResult)\n        return signupResult;\n\n\n    };\n    const register = async () => {\n\n        setisLoading(\"true\")\n\n\n        if (valid()) {\n            const result = await getdata()\n            console.log('hello', result)\n            localStorage.setItem('Token', result.token);\n            if (result && result.message == \"User Authenticated\") {\n\n\n\n                setisLoading(\"false\")\n\n\n                // props.history.push('/admin/Dashboard')\n            } else {\n                // this.notify(result.message, \"danger\")\n\n\n                setresponseError(\"result.message\")\n                setisLoading(\"false\")\n\n            }\n        }\n    }\n\n\n\n    return (\n\n        <div>\n            <div\n                className={classes.pageHeader}\n                style={{\n                    backgroundImage: \"url(\" + image + \")\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"top center\"\n                }}\n            >\n                <div className={classes.container}>\n                    <GridContainer justify=\"center\">\n                        <GridItem xs={12} sm={12} md={4}>\n                            <Card className={classes[cardAnimaton]} style={{}}>\n                                <form className={classes.form}>\n                                    <CardHeader color=\"primary\" className={classes.cardHeader}>\n                                        <h4>Sign-up Form</h4>\n                                        <div className={classes.socialLine}>\n                                            <Button\n                                                justIcon\n                                                // href=\"#pablo\"\n                                                target=\"_blank\"\n                                                color=\"transparent\"\n                                                onClick={e => e.preventDefault()}\n                                            >\n                                                <i className={\"fab fa-twitter\"} />\n                                            </Button>\n                                            <Button\n                                                justIcon\n                                                // href=\"#pablo\"\n                                                target=\"_blank\"\n                                                color=\"transparent\"\n                                                onClick={e => e.preventDefault()}\n                                            >\n                                                <i className={\"fab fa-facebook\"} />\n                                            </Button>\n                                            <Button\n                                                justIcon\n                                                // href=\"#pablo\"\n                                                target=\"_blank\"\n                                                color=\"transparent\"\n                                                onClick={e => e.preventDefault()}\n                                            >\n                                                <i className={\"fab fa-google-plus-g\"} />\n                                            </Button>\n                                        </div>\n                                    </CardHeader>\n\n                                    <CardBody>\n                                        <CustomInput\n                                            labelText=\"First Name...\"\n                                            id=\"first\"\n                                            formControlProps={{\n                                                fullWidth: true\n                                            }}\n                                            value={firstname}\n                                            onHandleChange={(event) => setFirstname(event.target.value)}\n                                            inputProps={{\n                                                type: \"text\",\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <People className={classes.inputIconsColor} />\n                                                    </InputAdornment>\n                                                )\n                                            }}\n                                        />\n                                        <CustomInput\n                                            labelText=\"Last Name...\"\n                                            id=\"last\"\n                                            formControlProps={{\n                                                fullWidth: true\n                                            }}\n                                            value={lastname}\n                                            onHandleChange={(event) => setLastname(event.target.value)}\n                                            inputProps={{\n                                                type: \"text\",\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <People className={classes.inputIconsColor} />\n                                                    </InputAdornment>\n                                                )\n                                            }}\n                                        />\n                                        <CustomInput\n                                            labelText=\"Email...\"\n                                            id=\"email\"\n                                            formControlProps={{\n                                                fullWidth: true\n                                            }}\n                                            value={email}\n                                            onHandleChange={(event) => setEmail(event.target.value)}\n                                            inputProps={{\n                                                type: \"email\",\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <Email className={classes.inputIconsColor} />\n                                                    </InputAdornment>\n                                                )\n                                            }}\n                                        />\n                                        <CustomInput\n                                            labelText=\"Password\"\n                                            id=\"pass\"\n                                            formControlProps={{\n                                                fullWidth: true\n                                            }}\n                                            value={password}\n                                            error={passwordError}\n                                            onHandleChange={(event) => setPassword(event.target.value)}\n                                            inputProps={{\n                                                type: \"password\",\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <Icon className={classes.inputIconsColor}>\n                                                            lock_outline\n                            </Icon>\n                                                    </InputAdornment>\n                                                ),\n                                                autoComplete: \"off\"\n                                            }}\n                                        />\n                                        <CustomInput\n                                            labelText=\"Confirm Password\"\n                                            id=\"pass\"\n                                            formControlProps={{\n                                                fullWidth: true\n                                            }}\n                                            value={confirmpassword}\n                                            onHandleChange={(event) => setConfirmPassword(event.target.value)}\n                                            inputProps={{\n                                                type: \"password\",\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <Icon className={classes.inputIconsColor}>\n                                                            lock_outline\n                            </Icon>\n                                                    </InputAdornment>\n                                                ),\n                                                autoComplete: \"off\"\n                                            }}\n                                        />\n\n                                    </CardBody>\n                                    <CardFooter className={classes.cardFooter}>\n\n                                        <Button simple color=\"primary\" size=\"lg\" onClick={() => register()}>\n                                            Register\n                    </Button>\n                                    </CardFooter>\n                                </form>\n                            </Card>\n                        </GridItem>\n                    </GridContainer>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}