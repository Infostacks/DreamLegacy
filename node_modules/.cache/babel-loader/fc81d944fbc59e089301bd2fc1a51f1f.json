{"ast":null,"code":"import _defineProperty from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/components/CustomInput/CustomInput.js\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport styles from \"assets/jss/material-kit-react/components/customInputStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function CustomInput(props) {\n  var _classNames, _classNames2, _classNames4;\n\n  console.log('hello', props);\n  var classes = useStyles();\n  var formControlProps = props.formControlProps,\n      labelText = props.labelText,\n      id = props.id,\n      labelProps = props.labelProps,\n      inputProps = props.inputProps,\n      error = props.error,\n      white = props.white,\n      inputRootCustomClasses = props.inputRootCustomClasses,\n      success = props.success,\n      Myerror = props.Myerror,\n      onHandleChange = props.onHandleChange;\n  var labelClasses = classNames((_classNames = {}, _defineProperty(_classNames, \" \" + classes.labelRootError, error), _defineProperty(_classNames, \" \" + classes.labelRootSuccess, success && !error), _classNames));\n  var underlineClasses = classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.underlineError, error), _defineProperty(_classNames2, classes.underlineSuccess, success && !error), _defineProperty(_classNames2, classes.underline, true), _defineProperty(_classNames2, classes.whiteUnderline, white), _classNames2));\n  var marginTop = classNames(_defineProperty({}, inputRootCustomClasses, inputRootCustomClasses !== undefined));\n  var inputClasses = classNames((_classNames4 = {}, _defineProperty(_classNames4, classes.input, true), _defineProperty(_classNames4, classes.whiteInput, white), _classNames4));\n  var formControlClasses;\n\n  if (formControlProps !== undefined) {\n    formControlClasses = classNames(formControlProps.className, classes.formControl);\n  } else {\n    formControlClasses = classes.formControl;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControl, Object.assign({}, formControlProps, {\n    className: formControlClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), labelText !== undefined ? /*#__PURE__*/React.createElement(InputLabel, Object.assign({\n    className: classes.labelRoot + \" \" + labelClasses,\n    htmlFor: id\n  }, labelProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), labelText) : null, /*#__PURE__*/React.createElement(Input, Object.assign({\n    classes: {\n      input: inputClasses,\n      root: marginTop,\n      disabled: classes.disabled,\n      underline: underlineClasses\n    },\n    id: id,\n    onChange: function onChange(value) {\n      return onHandleChange(value);\n    }\n  }, inputProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, error));\n}\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  inputRootCustomClasses: PropTypes.string,\n  error: PropTypes.string,\n  success: PropTypes.bool,\n  white: PropTypes.bool\n};","map":{"version":3,"sources":["/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/components/CustomInput/CustomInput.js"],"names":["React","PropTypes","classNames","makeStyles","FormControl","InputLabel","Input","styles","useStyles","CustomInput","props","console","log","classes","formControlProps","labelText","id","labelProps","inputProps","error","white","inputRootCustomClasses","success","Myerror","onHandleChange","labelClasses","labelRootError","labelRootSuccess","underlineClasses","underlineError","underlineSuccess","underline","whiteUnderline","marginTop","undefined","inputClasses","input","whiteInput","formControlClasses","className","formControl","labelRoot","root","disabled","value","propTypes","node","object","string","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\n\nimport styles from \"assets/jss/material-kit-react/components/customInputStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomInput(props) {\n  console.log('hello', props)\n  const classes = useStyles();\n  const {\n    formControlProps,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    white,\n    inputRootCustomClasses,\n    success,\n    Myerror,\n    onHandleChange\n\n  } = props;\n\n  const labelClasses = classNames({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error\n  });\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true,\n    [classes.whiteUnderline]: white\n  });\n  const marginTop = classNames({\n    [inputRootCustomClasses]: inputRootCustomClasses !== undefined\n  });\n  const inputClasses = classNames({\n    [classes.input]: true,\n    [classes.whiteInput]: white\n  });\n  var formControlClasses;\n  if (formControlProps !== undefined) {\n    formControlClasses = classNames(\n      formControlProps.className,\n      classes.formControl\n    );\n  } else {\n    formControlClasses = classes.formControl;\n  }\n\n  return (\n    <FormControl {...formControlProps} className={formControlClasses}>\n      {labelText !== undefined ? (\n        <InputLabel\n          className={classes.labelRoot + \" \" + labelClasses}\n\n          htmlFor={id}\n          {...labelProps}\n        >\n          {labelText}\n        </InputLabel>\n      ) : null}\n      <Input\n        classes={{\n          input: inputClasses,\n          root: marginTop,\n          disabled: classes.disabled,\n          underline: underlineClasses\n        }}\n        id={id}\n        onChange={(value) => onHandleChange(value)}\n        {...inputProps}\n      />\n      <p>{error}</p>\n    </FormControl>\n  );\n}\n\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  inputRootCustomClasses: PropTypes.string,\n  error: PropTypes.string,\n  success: PropTypes.bool,\n  white: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}