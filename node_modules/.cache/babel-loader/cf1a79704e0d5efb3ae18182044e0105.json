{"ast":null,"code":"import _regeneratorRuntime from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/views/Signup/index.js\";\nimport React, { useState } from \"react\";\nimport { signup } from 'Services/Authentication'; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\"; // core components\n\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport styles from \"assets/jss/material-kit-react/views/SignUpPage.js\";\nimport image from \"assets/img/bg7.jpg\";\nvar useStyles = makeStyles(styles);\nexport default function SignUpPage(props) {\n  var _React$useState = React.useState(\"cardHidden\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cardAnimaton = _React$useState2[0],\n      setCardAnimation = _React$useState2[1];\n\n  var _React$useState3 = React.useState('Enter Your Email'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      email = _React$useState4[0],\n      setEmail = _React$useState4[1];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      passwordError = _React$useState6[0],\n      setPasswordError = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      emailError = _React$useState8[0],\n      setEmailError = _React$useState8[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setisLoading = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      firstname = _useState6[0],\n      setFirstname = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lastname = _useState8[0],\n      setLastname = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      responseError = _useState10[0],\n      setresponseError = _useState10[1];\n\n  var _React$useState9 = React.useState('Enter Your Email'),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      confirmpassword = _React$useState10[0],\n      setConfirmPassword = _React$useState10[1];\n\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  var classes = useStyles();\n  var rest = Object.assign({}, props);\n\n  var valid = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (email.includes('@')) {\n                _context.next = 4;\n                break;\n              }\n\n              setEmailError(\"invalid Email\");\n              _context.next = 21;\n              break;\n\n            case 4:\n              if (email.includes(\"@\")) {\n                _context.next = 8;\n                break;\n              }\n\n              setEmailError(\"invalid Email\");\n              _context.next = 21;\n              break;\n\n            case 8:\n              if (email.includes(\".com\")) {\n                _context.next = 12;\n                break;\n              }\n\n              setEmailError(\"invalid Email\");\n              _context.next = 21;\n              break;\n\n            case 12:\n              if (!(password.length < 5)) {\n                _context.next = 16;\n                break;\n              }\n\n              setPasswordError(\"Invalid Password\");\n              _context.next = 21;\n              break;\n\n            case 16:\n              if (!(password != confirmpassword)) {\n                _context.next = 20;\n                break;\n              }\n\n              setPasswordError(\"Password not matched\");\n              _context.next = 21;\n              break;\n\n            case 20:\n              return _context.abrupt(\"return\", true);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function valid() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getdata = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var data, signupResult;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = {\n                firstname: firstname,\n                lastname: lastname,\n                email: email,\n                password: password,\n                confirmpassword: confirmpassword // This is the body part\n\n              };\n              _context2.next = 3;\n              return signup(data);\n\n            case 3:\n              signupResult = _context2.sent;\n              console.log('hello login result', signupResult);\n              return _context2.abrupt(\"return\", signupResult);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getdata() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var register = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setisLoading(\"true\");\n\n              if (!valid()) {\n                _context3.next = 8;\n                break;\n              }\n\n              _context3.next = 4;\n              return getdata();\n\n            case 4:\n              result = _context3.sent;\n              console.log('hello', result);\n              localStorage.setItem('Token', result.token);\n\n              if (result && result.message == \"User Authenticated\") {\n                setisLoading(\"false\"); // props.history.push('/admin/Dashboard')\n              } else {\n                // this.notify(result.message, \"danger\")\n                setresponseError(\"result.message\");\n                setisLoading(\"false\");\n              }\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function register() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageHeader,\n    style: {\n      backgroundImage: \"url(\" + image + \")\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"top center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes[cardAnimaton],\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    className: classes.cardHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 41\n    }\n  }, \"Sign-up Form\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.socialLine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    justIcon: true // href=\"#pablo\"\n    ,\n    target: \"_blank\",\n    color: \"transparent\",\n    onClick: function onClick(e) {\n      return e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    justIcon: true // href=\"#pablo\"\n    ,\n    target: \"_blank\",\n    color: \"transparent\",\n    onClick: function onClick(e) {\n      return e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    justIcon: true // href=\"#pablo\"\n    ,\n    target: \"_blank\",\n    color: \"transparent\",\n    onClick: function onClick(e) {\n      return e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-google-plus-g\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 49\n    }\n  })))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    labelText: \"First Name...\",\n    id: \"first\",\n    formControlProps: {\n      fullWidth: true\n    },\n    value: firstname,\n    onHandleChange: function onHandleChange(event) {\n      return setFirstname(event.target.value);\n    },\n    inputProps: {\n      type: \"text\",\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(People, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 57\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    labelText: \"Last Name...\",\n    id: \"last\",\n    formControlProps: {\n      fullWidth: true\n    },\n    value: lastname,\n    onHandleChange: function onHandleChange(event) {\n      return setLastname(event.target.value);\n    },\n    inputProps: {\n      type: \"text\",\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(People, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 57\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    labelText: \"Email...\",\n    id: \"email\",\n    formControlProps: {\n      fullWidth: true\n    },\n    value: email,\n    onHandleChange: function onHandleChange(event) {\n      return setEmail(event.target.value);\n    },\n    inputProps: {\n      type: \"email\",\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Email, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 57\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    labelText: \"Password\",\n    id: \"pass\",\n    formControlProps: {\n      fullWidth: true\n    },\n    value: password,\n    error: passwordError,\n    onHandleChange: function onHandleChange(event) {\n      return setPassword(event.target.value);\n    },\n    inputProps: {\n      type: \"password\",\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 57\n        }\n      }, \"lock_outline\")),\n      autoComplete: \"off\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    labelText: \"Confirm Password\",\n    id: \"pass\",\n    formControlProps: {\n      fullWidth: true\n    },\n    value: confirmpassword,\n    onHandleChange: function onHandleChange(event) {\n      return setConfirmPassword(event.target.value);\n    },\n    inputProps: {\n      type: \"password\",\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 57\n        }\n      }, \"lock_outline\")),\n      autoComplete: \"off\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(CardFooter, {\n    className: classes.cardFooter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    simple: true,\n    color: \"primary\",\n    size: \"lg\",\n    onClick: function onClick() {\n      return register();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 41\n    }\n  }, \"Register\")))))))));\n}","map":{"version":3,"sources":["/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/views/Signup/index.js"],"names":["React","useState","signup","makeStyles","InputAdornment","Icon","Email","People","Header","HeaderLinks","Footer","GridContainer","GridItem","Button","Card","CardBody","CardHeader","CardFooter","CustomInput","styles","image","useStyles","SignUpPage","props","cardAnimaton","setCardAnimation","email","setEmail","password","setPassword","passwordError","setPasswordError","emailError","setEmailError","isLoading","setisLoading","firstname","setFirstname","lastname","setLastname","responseError","setresponseError","confirmpassword","setConfirmPassword","setTimeout","classes","rest","valid","includes","length","getdata","data","signupResult","console","log","register","result","localStorage","setItem","token","message","pageHeader","backgroundImage","backgroundSize","backgroundPosition","container","form","cardHeader","socialLine","e","preventDefault","fullWidth","event","target","value","type","endAdornment","inputIconsColor","autoComplete","cardFooter"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { signup } from 'Services/Authentication';\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\";\n// core components\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\n\nimport styles from \"assets/jss/material-kit-react/views/SignUpPage.js\";\n\nimport image from \"assets/img/bg7.jpg\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function SignUpPage(props) {\n    const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n    const [email, setEmail] = React.useState('Enter Your Email');\n    const [password, setPassword] = useState('');\n    const [passwordError, setPasswordError] = React.useState('');\n    const [emailError, setEmailError] = React.useState('');\n    const [isLoading, setisLoading] = useState('');\n    const [firstname, setFirstname] = useState('');\n    const [lastname, setLastname] = useState('');\n    const [responseError, setresponseError] = useState('');\n    const [confirmpassword, setConfirmPassword] = React.useState('Enter Your Email');\n    setTimeout(function () {\n        setCardAnimation(\"\");\n    }, 700);\n    const classes = useStyles();\n    const { ...rest } = props;\n    const valid = async () => {\n        if (!email.includes('@')) {\n            setEmailError(\"invalid Email\")\n        }\n        else if (!email.includes(\"@\")) {\n            setEmailError(\"invalid Email\")\n        }\n        else if (!email.includes(\".com\")) {\n            setEmailError(\"invalid Email\")\n        }\n        else if (password.length < 5) {\n            setPasswordError(\"Invalid Password\")\n\n        }\n        else if (password != confirmpassword) {\n            setPasswordError(\"Password not matched\")\n        }\n        else {\n            return true;\n        }\n    }\n\n\n\n    const getdata = async () => {\n        const data = {\n            firstname: firstname,\n            lastname: lastname,\n            email: email,\n            password: password,\n            confirmpassword: confirmpassword // This is the body part\n        }\n        const signupResult = await signup(data);\n        console.log('hello login result', signupResult)\n        return signupResult;\n\n\n    };\n    const register = async () => {\n\n        setisLoading(\"true\")\n\n\n        if (valid()) {\n            const result = await getdata()\n            console.log('hello', result)\n            localStorage.setItem('Token', result.token);\n            if (result && result.message == \"User Authenticated\") {\n\n\n\n                setisLoading(\"false\")\n\n\n                // props.history.push('/admin/Dashboard')\n            } else {\n                // this.notify(result.message, \"danger\")\n\n\n                setresponseError(\"result.message\")\n                setisLoading(\"false\")\n\n            }\n        }\n    }\n\n\n\n    return (\n\n        <div>\n            <div\n                className={classes.pageHeader}\n                style={{\n                    backgroundImage: \"url(\" + image + \")\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"top center\"\n                }}\n            >\n                <div className={classes.container}>\n                    <GridContainer justify=\"center\">\n                        <GridItem xs={12} sm={12} md={4}>\n                            <Card className={classes[cardAnimaton]} style={{}}>\n                                <form className={classes.form}>\n                                    <CardHeader color=\"primary\" className={classes.cardHeader}>\n                                        <h4>Sign-up Form</h4>\n                                        <div className={classes.socialLine}>\n                                            <Button\n                                                justIcon\n                                                // href=\"#pablo\"\n                                                target=\"_blank\"\n                                                color=\"transparent\"\n                                                onClick={e => e.preventDefault()}\n                                            >\n                                                <i className={\"fab fa-twitter\"} />\n                                            </Button>\n                                            <Button\n                                                justIcon\n                                                // href=\"#pablo\"\n                                                target=\"_blank\"\n                                                color=\"transparent\"\n                                                onClick={e => e.preventDefault()}\n                                            >\n                                                <i className={\"fab fa-facebook\"} />\n                                            </Button>\n                                            <Button\n                                                justIcon\n                                                // href=\"#pablo\"\n                                                target=\"_blank\"\n                                                color=\"transparent\"\n                                                onClick={e => e.preventDefault()}\n                                            >\n                                                <i className={\"fab fa-google-plus-g\"} />\n                                            </Button>\n                                        </div>\n                                    </CardHeader>\n\n                                    <CardBody>\n                                        <CustomInput\n                                            labelText=\"First Name...\"\n                                            id=\"first\"\n                                            formControlProps={{\n                                                fullWidth: true\n                                            }}\n                                            value={firstname}\n                                            onHandleChange={(event) => setFirstname(event.target.value)}\n                                            inputProps={{\n                                                type: \"text\",\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <People className={classes.inputIconsColor} />\n                                                    </InputAdornment>\n                                                )\n                                            }}\n                                        />\n                                        <CustomInput\n                                            labelText=\"Last Name...\"\n                                            id=\"last\"\n                                            formControlProps={{\n                                                fullWidth: true\n                                            }}\n                                            value={lastname}\n                                            onHandleChange={(event) => setLastname(event.target.value)}\n                                            inputProps={{\n                                                type: \"text\",\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <People className={classes.inputIconsColor} />\n                                                    </InputAdornment>\n                                                )\n                                            }}\n                                        />\n                                        <CustomInput\n                                            labelText=\"Email...\"\n                                            id=\"email\"\n                                            formControlProps={{\n                                                fullWidth: true\n                                            }}\n                                            value={email}\n                                            onHandleChange={(event) => setEmail(event.target.value)}\n                                            inputProps={{\n                                                type: \"email\",\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <Email className={classes.inputIconsColor} />\n                                                    </InputAdornment>\n                                                )\n                                            }}\n                                        />\n                                        <CustomInput\n                                            labelText=\"Password\"\n                                            id=\"pass\"\n                                            formControlProps={{\n                                                fullWidth: true\n                                            }}\n                                            value={password}\n                                            error={passwordError}\n                                            onHandleChange={(event) => setPassword(event.target.value)}\n                                            inputProps={{\n                                                type: \"password\",\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <Icon className={classes.inputIconsColor}>\n                                                            lock_outline\n                            </Icon>\n                                                    </InputAdornment>\n                                                ),\n                                                autoComplete: \"off\"\n                                            }}\n                                        />\n                                        <CustomInput\n                                            labelText=\"Confirm Password\"\n                                            id=\"pass\"\n                                            formControlProps={{\n                                                fullWidth: true\n                                            }}\n                                            value={confirmpassword}\n                                            onHandleChange={(event) => setConfirmPassword(event.target.value)}\n                                            inputProps={{\n                                                type: \"password\",\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <Icon className={classes.inputIconsColor}>\n                                                            lock_outline\n                            </Icon>\n                                                    </InputAdornment>\n                                                ),\n                                                autoComplete: \"off\"\n                                            }}\n                                        />\n\n                                    </CardBody>\n                                    <CardFooter className={classes.cardFooter}>\n\n                                        <Button simple color=\"primary\" size=\"lg\" onClick={() => register()}>\n                                            Register\n                    </Button>\n                                    </CardFooter>\n                                </form>\n                            </Card>\n                        </GridItem>\n                    </GridContainer>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}