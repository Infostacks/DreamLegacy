{"ast":null,"code":"import _regeneratorRuntime from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/views/States/States.js\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\";\nimport { getMega } from '../../Services/Pool'; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport { Grid } from \"@material-ui/core\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\"; // import HeaderLinks from \"components/Header/HeaderLinks.js\";\n\nimport Parallax from \"components/Parallax/Parallax.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-kit-react/views/landingPage.js\";\nimport { Divider } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport * as dataActions from '../../Store/Actions/Index';\nimport { getMegaData } from '../../Store/Actions/Index';\nvar dashboardRoutes = [];\nvar useStyles = makeStyles(styles);\n\nfunction States(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      states1 = _useState2[0],\n      setStates = _useState2[1];\n\n  var history = useHistory();\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      poolsdata = _useState4[0],\n      setpools = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      megaData = _useState6[0],\n      setMega = _useState6[1];\n\n  var statesRoute = function statesRoute() {\n    var statesPath = \"/state-page\";\n    history.push(statesPath);\n  };\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var mega;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return props.getPoolsData();\n\n          case 2:\n            _context.next = 4;\n            return props.getMegaData();\n\n          case 4:\n            // console.log('megadata',megaResult.data)\n            mega = props.mega;\n            console.log('hi states', mega); // let res =megaResult && megaResult.data && _.map(megaResult.data.s,(state, index) => {\n            //   return { label: state.i.sn, abbr: state.i.s, key: index};\n            // });\n            // if (res && !_.isEmpty(res)) {\n            //   setStates(res);\n            // }\n            // console.log('states data', res)\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []); // useEffect(async () => {\n  //   const poolsdata = await getMega();\n  //   console.log('hello', props.pools &&  props.pools)\n  //   // console.log('hello',poolsdata)\n  //   let states = _.map(poolsdata.data.s, (state, index) => {\n  //     return { label: state.i.sn, abbr: state.i.s, key: index };\n  //   });\n  //   if (states && !_.isEmpty(states)) {\n  //     setStates(states);\n  //   }\n  //   console.log(\"states data\", states);\n  // }, []);\n  // const { ...rest } = props;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    color: \"transparent\",\n    routes: dashboardRoutes // rightLinks={<HeaderLinks />}\n    ,\n    fixed: true,\n    changeColorOnScroll: {\n      height: 90,\n      color: \"grey\"\n    } // {...rest}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Parallax, {\n    filter: true,\n    image: require(\"assets/img/US-Map.jpg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, states1 && states1.map(function (y, index) {\n    return /*#__PURE__*/React.createElement(Button, {\n      onClick: statesRoute,\n      style: {\n        background: \"#22223b\",\n        align: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, y.label, \", \", y.abbr);\n  }))), /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: '250px',\n      display: 'contents'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log('state', state);\n  return {\n    pools: state && state.data && state.data.poolsData && state.data.poolsData.data,\n    mega: state && state.data && state.data.megaData && state.data.megaData.data && state.data.megaData.data.s && state.data.megaData.data.s[0] && state.data.megaData.data.s[0].g && state.data.megaData.data.s[0].g[0] && state.data.megaData.data.s[0].g[0].h && state.data.megaData.data.s[0].g[0].h[0] && state.data.megaData.data.s[0].g[0].h[0].n\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getPoolsData: function getPoolsData() {\n      return dispatch(dataActions.getPoolsData());\n    },\n    getMegaData: function getMegaData() {\n      return dispatch(dataActions.getMegaData());\n    }\n  };\n}; // // Exports\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(States);","map":{"version":3,"sources":["/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/views/States/States.js"],"names":["React","useEffect","useState","classNames","getMega","makeStyles","Header","Footer","Grid","GridContainer","GridItem","Button","Parallax","Card","CardBody","CardFooter","styles","Divider","connect","_","useHistory","dataActions","getMegaData","dashboardRoutes","useStyles","States","props","classes","states1","setStates","history","poolsdata","setpools","megaData","setMega","statesRoute","statesPath","push","getPoolsData","mega","console","log","height","color","require","container","map","y","index","background","align","label","abbr","width","display","mapStateToProps","state","pools","data","poolsData","s","g","h","n","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\nimport {getMega} from '../../Services/Pool'\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport { Grid } from \"@material-ui/core\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n// import HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Parallax from \"components/Parallax/Parallax.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-kit-react/views/landingPage.js\";\nimport { Divider } from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport _ from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport * as dataActions from '../../Store/Actions/Index'\nimport { getMegaData } from '../../Store/Actions/Index'\n\n\nconst dashboardRoutes = [];\n\nconst useStyles = makeStyles(styles);\n\n\nfunction States(props) {\n  const classes = useStyles();\n  const [states1, setStates] = useState();\n  const history = useHistory();\n  const [poolsdata, setpools] = useState(\"\");\n  const [megaData, setMega] = useState(\"\");\n \n\n    \n  const statesRoute = () => {\n    let statesPath= \"/state-page\";\n    history.push(statesPath);\n  \n  }\n\n  useEffect( async() => {\n    // await props.getPoolsData();\n    // const poolsResult = await getpools();\n    // setpools(poolsResult.data)\n    await props.getPoolsData();\n    await props.getMegaData();\n    \n    \n    // console.log('megadata',megaResult.data)\n    const {mega} = props;\n    console.log('hi states',mega)\n\n\n    \n    // let res =megaResult && megaResult.data && _.map(megaResult.data.s,(state, index) => {\n    //   return { label: state.i.sn, abbr: state.i.s, key: index};\n\n  // });\n  // if (res && !_.isEmpty(res)) {\n  //   setStates(res);\n  // }\n  // console.log('states data', res)\n\n},[]);\n\n\n  // useEffect(async () => {\n    \n  //   const poolsdata = await getMega();\n  //   console.log('hello', props.pools &&  props.pools)\n  //   // console.log('hello',poolsdata)\n  //   let states = _.map(poolsdata.data.s, (state, index) => {\n  //     return { label: state.i.sn, abbr: state.i.s, key: index };\n  //   });\n  //   if (states && !_.isEmpty(states)) {\n  //     setStates(states);\n  //   }\n  //   console.log(\"states data\", states);\n  // }, []);\n\n  // const { ...rest } = props;\n  return (\n    <div>\n      <Header\n        color=\"transparent\"\n        routes={dashboardRoutes}\n        // rightLinks={<HeaderLinks />}\n        fixed\n        changeColorOnScroll={{\n          height: 90,\n          color: \"grey\",\n        }}\n        // {...rest}\n      />\n      <Parallax filter image={require(\"assets/img/US-Map.jpg\")}>\n        <div className={classes.container}>\n        {states1 &&\n          states1.map((y, index) => (\n            <Button onClick={statesRoute} style={{ background: \"#22223b\", align: \"center\" }}>\n              {y.label}, {y.abbr}\n            </Button>\n          ))}\n        </div>\n          {/* <div className={classes.container}>\n        {states1 && states1.data && states1.data.s poolsdata.data.s\n          states1.map((y, index) => (\n            <Button onClick={statesdata} style={{ background: \"#22223b\", align: \"center\" }}>\n              {y.label}, {y.abbr}\n            </Button>\n          ))}\n        // </div> */}\n      </Parallax>\n      <Card style={{width:'250px',display:'contents'}}>\n       \n      </Card>\n      <Footer />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  console.log('state', state)\n  return {\n    pools: state && state.data && state.data.poolsData && state.data.poolsData.data, \n    mega: state && state.data && state.data.megaData && state.data.megaData.data && \n   state.data.megaData.data.s && state.data.megaData.data.s[0] && state.data.megaData.data.s[0].g && \n   state.data.megaData.data.s[0].g[0] && state.data.megaData.data.s[0].g[0].h \n   && state.data.megaData.data.s[0].g[0].h[0] && state.data.megaData.data.s[0].g[0].h[0].n \n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getPoolsData:() => dispatch(dataActions.getPoolsData()),\n    getMegaData:() => dispatch(dataActions.getMegaData())\n   }\n\n};\n// // Exports\nexport default connect(mapStateToProps, mapDispatchToProps)(States);"]},"metadata":{},"sourceType":"module"}