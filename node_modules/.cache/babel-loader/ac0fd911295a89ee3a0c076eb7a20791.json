{"ast":null,"code":"import _regeneratorRuntime from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/views/StatesPage/Index.js\";\nimport React, { useEffect } from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\"; // @material-ui/icons\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper'; // core components\n\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\"; // import HeaderLinks from \"components/Header/HeaderLinks.js\";\n\nimport Parallax from \"components/Parallax/Parallax.js\";\nimport * as dataActions from '../../Store/Actions/Index';\nimport styles from \"assets/jss/material-kit-react/views/landingPage.js\";\nimport { Grid } from \"@material-ui/core\"; // Sections for this page\n\nvar StyledTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: '#dc2f02',\n      color: '#f6bd60'\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\nvar StyledTableRow = withStyles(function (theme) {\n  return {\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: '#9d0208'\n      }\n    }\n  };\n})(TableRow);\n\nfunction createData(name, calories) {\n  return {\n    name: name,\n    calories: calories\n  };\n}\n\nvar useStyles = makeStyles({\n  table: {\n    minWidth: 100\n  }\n});\nvar dashboardRoutes = [];\n\nfunction StatesPage(props) {\n  var _this = this;\n\n  var classes = useStyles();\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return props.getPoolsData();\n\n          case 2:\n            _context.next = 4;\n            return props.getMegaData();\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    color: \"transparent\",\n    routes: dashboardRoutes // rightLinks={<HeaderLinks />}\n    ,\n    fixed: true,\n    changeColorOnScroll: {\n      height: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: '200px',\n      background: '#6a040f'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, props.sdata && props.sdata.map(function (y, index) {\n    return /*#__PURE__*/React.createElement(Table, {\n      className: classes.table,\n      \"aria-label\": \"customized table\",\n      style: {\n        marginLeft: \"20px\",\n        color: \"white   \"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: {\n        textAlign: \"center\",\n        background: '#ffbe0b',\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, y.i.n))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, y.h && y.h.map(function (date, index) {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(StyledTableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 10\n        }\n      }, date.d, date.n && date.n.map(function (number, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          \"class\": \"numbers-ball\",\n          style: {\n            backgroundColor: '#ffbe0b',\n            width: '35px',\n            height: '35px',\n            borderRadius: '20px',\n            textAlign: 'center',\n            alignItems: 'center',\n            display: 'inline-flex',\n            margin: '10px 8px 10px 0',\n            justifyContent: 'center',\n            fontSize: '19px',\n            fontFamily: 'ProximaNova-Bold',\n            color: 'white'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 22\n          }\n        }, number);\n      }))));\n    })));\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log('state', state);\n  return {\n    sdata: state && state.data && state.data.selectedStateData && state.data.selectedStateData.g,\n    ddata: state && state.data && state.data.selectedStateData && state.data.selectedStateData.g && state.data.selectedStateData.g.h,\n    mega: state && state.data && state.data.megaData && state.data.megaData.data && state.data.megaData.data.s\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getPoolsData: function getPoolsData() {\n      return dispatch(dataActions.getPoolsData());\n    },\n    getMegaData: function getMegaData() {\n      return dispatch(dataActions.getMegaData());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatesPage);","map":{"version":3,"sources":["/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/views/StatesPage/Index.js"],"names":["React","useEffect","classNames","makeStyles","withStyles","connect","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Header","Footer","GridContainer","GridItem","Button","Parallax","dataActions","styles","Grid","StyledTableCell","theme","head","backgroundColor","color","body","fontSize","StyledTableRow","root","createData","name","calories","useStyles","table","minWidth","dashboardRoutes","StatesPage","props","classes","getPoolsData","getMegaData","height","paddingTop","background","container","sdata","map","y","index","marginLeft","textAlign","i","n","h","date","d","number","width","borderRadius","alignItems","display","margin","justifyContent","fontFamily","mapStateToProps","state","console","log","data","selectedStateData","g","ddata","mega","megaData","s","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useEffect} from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles ,withStyles} from \"@material-ui/core/styles\";\nimport {connect} from \"react-redux\";\n// @material-ui/icons\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n// core components\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n// import HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Parallax from \"components/Parallax/Parallax.js\";\nimport * as dataActions from '../../Store/Actions/Index'\nimport styles from \"assets/jss/material-kit-react/views/landingPage.js\";\nimport { Grid } from \"@material-ui/core\";\n\n// Sections for this page\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: '#dc2f02',\n    color: '#f6bd60',\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: '#9d0208',\n    },\n  },\n}))(TableRow);\n\nfunction createData(name, calories) {\n  return { name, calories};\n}\n\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 100,\n  },\n});\n\nconst dashboardRoutes = [];\n\n\n\n\n\n\nfunction StatesPage(props) {\n  const classes = useStyles();\n\n  useEffect( async() => {\n   \n    await props.getPoolsData();\n    await props.getMegaData();\n\n\n    \n//     console.log('megadata',props.mega)\n//     let res =props.mega && _.map(props.mega,(state, index) => {\n//       return { label: state.i.sn, abbr: state.i.s, key: index};\n\n//   });\n//   if (res && !_.isEmpty(res)) {\n//     setStates(res);\n//   }\n//   console.log('states data', res)\n\n},[]);\n\n\n  return (\n   <div>\n      <Header\n        color=\"transparent\" \n        routes={dashboardRoutes}\n        // rightLinks={<HeaderLinks />}\n        fixed\n        changeColorOnScroll={{\n          height: 50,\n        \n        }}\n      \n      />\n      {/* <Parallax style={{height:'1500px'}} filter image={require(\"assets/img/landing-bg.jpg\")}>\n        <div className={classes.container}>\n         \n            {/* <GridItem xs={12} sm={12} md={6}> */}\n              {/* <TableContainer component={Paper} style={{marginLeft:'20px',minHeight:'200px'}}> */}\n              <div style={{paddingTop: '200px', background:'#6a040f'}}>\n              <div className={classes.container}>\n        {props.sdata &&\n          props.sdata.map((y, index) => (\n\n      <Table className={classes.table} aria-label=\"customized table\" style={{marginLeft:\"20px\",color:\"white   \"}}>\n        <TableHead > \n        <TableRow >\n            <StyledTableCell style={{textAlign:\"center\",background:'#ffbe0b',color:'white'}}>{y.i.n}</StyledTableCell>\n          </TableRow>\n</TableHead>\n          {/* <TableRow> */}\n         \n             \n{/* \n            <StyledTableRow>\n            <div style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  justifyContent: 'center',\n                }}>\n                 \n                 {y.h &&\n                    y.h.map((d, index)=> (\n                      <div class=\"numbers-ball\" style={{\n                        backgroundColor: '#6a040f',\n                        width: '35px',\n                        height: '35px',\n                        borderRadius: '20px',\n                        textAlign: 'center',\n                        alignItems: 'center',\n                        display: 'flex',\n                        margin: '10px 8px 10px 0',\n                        justifyContent: 'center',\n                        fontSize: '19px',\n                        fontFamily: 'ProximaNova-Bold',\n                        color: 'white',\n                      }}>\n                        {d.d}\n                      </div>\n                    ))}\n                 \n                  \n                </div>\n                 \n                  \n              \n              <StyledTableCell>\n             \n              </StyledTableCell>\n              \n            </StyledTableRow> */}\n          \n         \n          {/* </TableRow> */}\n        {/* </TableHead> */}\n        <TableBody >\n          {y.h && y.h.map((date, index) => (\n         <TableRow >\n          \n         <Grid>\n         <StyledTableCell component=\"th\" scope=\"row\">\n                {date.d}\n                {date.n &&\n                    date.n.map((number, index) => (\n                     < div class=\"numbers-ball\" style={{\n                        backgroundColor: '#ffbe0b',\n                        width: '35px',\n                        height: '35px',\n                        borderRadius: '20px',\n                        textAlign: 'center',\n                        alignItems: 'center',\n                        display: 'inline-flex',\n                        margin: '10px 8px 10px 0',\n                        justifyContent: 'center',\n                        fontSize: '19px',\n                        fontFamily: 'ProximaNova-Bold',\n                        color: 'white',\n                      }}>{number}\n                      </div>\n                    ))}\n\n              </StyledTableCell>\n              </Grid>\n       </TableRow>\n          ))}\n\n\n\n\n     </TableBody>\n        \n       \n      </Table>\n        ))}\n        \n        </div>\n    {/* </TableContainer> */}\n            {/* </GridItem> */}\n         \n        {/* </div>\n      </Parallax>\n      <div className={classNames(classes.main, classes.mainRaised)}style={{background:'#6a040f'}}>\n        <div className={classes.container} style={{color:'white'}}>\n        \n        </div> */}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => {\n    console.log('state', state)\n    return {\n      sdata: state && state.data && state.data.selectedStateData && state.data.selectedStateData.g, \n      ddata: state && state.data && state.data.selectedStateData && state.data.selectedStateData.g &&\n       state.data.selectedStateData.g.h  , \n      mega: state && state.data && state.data.megaData && state.data.megaData.data && \n     state.data.megaData.data.s \n    };\n  };\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      getPoolsData:() => dispatch(dataActions.getPoolsData()),\n      getMegaData:() => dispatch(dataActions.getMegaData())\n     }\n  \n  };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatesPage);\n"]},"metadata":{},"sourceType":"module"}