{"ast":null,"code":"import _regeneratorRuntime from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/views/States/States.js\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\";\nimport { getMega } from '../../Services/Pool'; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport { Grid } from \"@material-ui/core\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\"; // import HeaderLinks from \"components/Header/HeaderLinks.js\";\n\nimport Parallax from \"components/Parallax/Parallax.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-kit-react/views/landingPage.js\";\nimport { Divider } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport { getMegaData } from '../../Store/Actions/Index';\nvar dashboardRoutes = [];\nvar useStyles = makeStyles(styles);\n\nfunction States(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      states1 = _useState2[0],\n      setStates = _useState2[1];\n\n  var history = useHistory();\n\n  var statesRoute = function statesRoute() {\n    var statesPath = \"/state-page\";\n    history.push(statesPath);\n  };\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var poolsdata, states;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getMega();\n\n          case 2:\n            poolsdata = _context.sent;\n            console.log('hello', props.pools && props.pools); // console.log('hello',poolsdata)\n\n            states = _.map(poolsdata.data.s, function (state, index) {\n              return {\n                label: state.i.sn,\n                abbr: state.i.s,\n                key: index\n              };\n            });\n\n            if (states && !_.isEmpty(states)) {\n              setStates(states);\n            }\n\n            console.log(\"states data\", states);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  var rest = Object.assign({}, props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, Object.assign({\n    color: \"transparent\",\n    routes: dashboardRoutes // rightLinks={<HeaderLinks />}\n    ,\n    fixed: true,\n    changeColorOnScroll: {\n      height: 90,\n      color: \"grey\"\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Parallax, {\n    filter: true,\n    image: require(\"assets/img/US-Map.jpg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, states1 && states1.map(function (y, index) {\n    return /*#__PURE__*/React.createElement(Button, {\n      onClick: statesRoute,\n      style: {\n        background: \"#22223b\",\n        align: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, y.label, \", \", y.abbr);\n  }))), /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: '250px',\n      display: 'contents'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log('state', state);\n  return {\n    pools: state && state.poolsData && state.poolsData\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateData: function updateData() {\n      dispatch(getMegaData());\n    }\n  };\n}; // // Exports\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(States);","map":{"version":3,"sources":["/home/sales/Documents/Dream-Legacy/DreamLegacy/DreamLegacy/src/views/States/States.js"],"names":["React","useEffect","useState","classNames","getMega","makeStyles","Header","Footer","Grid","GridContainer","GridItem","Button","Parallax","Card","CardBody","CardFooter","styles","Divider","connect","_","useHistory","getMegaData","dashboardRoutes","useStyles","States","props","classes","states1","setStates","history","statesRoute","statesPath","push","poolsdata","console","log","pools","states","map","data","s","state","index","label","i","sn","abbr","key","isEmpty","rest","height","color","require","container","y","background","align","width","display","mapStateToProps","poolsData","mapDispatchToProps","dispatch","updateData"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\nimport {getMega} from '../../Services/Pool'\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport { Grid } from \"@material-ui/core\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n// import HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Parallax from \"components/Parallax/Parallax.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-kit-react/views/landingPage.js\";\nimport { Divider } from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport _ from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport { getMegaData } from '../../Store/Actions/Index'\n\n\nconst dashboardRoutes = [];\n\nconst useStyles = makeStyles(styles);\n\n\nfunction States(props) {\n  const classes = useStyles();\n  const [states1, setStates] = useState();\n  const history = useHistory();\n\n    \n  const statesRoute = () => {\n    let statesPath= \"/state-page\";\n    history.push(statesPath);\n  \n  }\n\n  useEffect(async () => {\n    const poolsdata = await getMega();\n    console.log('hello', props.pools &&  props.pools)\n    // console.log('hello',poolsdata)\n    let states = _.map(poolsdata.data.s, (state, index) => {\n      return { label: state.i.sn, abbr: state.i.s, key: index };\n    });\n    if (states && !_.isEmpty(states)) {\n      setStates(states);\n    }\n    console.log(\"states data\", states);\n  }, []);\n\n  const { ...rest } = props;\n  return (\n    <div>\n      <Header\n        color=\"transparent\"\n        routes={dashboardRoutes}\n        // rightLinks={<HeaderLinks />}\n        fixed\n        changeColorOnScroll={{\n          height: 90,\n          color: \"grey\",\n        }}\n        {...rest}\n      />\n      <Parallax filter image={require(\"assets/img/US-Map.jpg\")}>\n        <div className={classes.container}>\n        {states1 &&\n          states1.map((y, index) => (\n            <Button onClick={statesRoute} style={{ background: \"#22223b\", align: \"center\" }}>\n              {y.label}, {y.abbr}\n            </Button>\n          ))}\n        </div>\n          {/* <div className={classes.container}>\n        {states1 && states1.data && states1.data.s poolsdata.data.s\n          states1.map((y, index) => (\n            <Button onClick={statesdata} style={{ background: \"#22223b\", align: \"center\" }}>\n              {y.label}, {y.abbr}\n            </Button>\n          ))}\n        // </div> */}\n      </Parallax>\n      <Card style={{width:'250px',display:'contents'}}>\n       \n      </Card>\n      <Footer />\n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => {\n  console.log('state', state)\n  return {\n    pools: state && state.poolsData && state.poolsData, \n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n   updateData: () => {\n     dispatch(getMegaData())\n   }\n\n   };\n};\n// // Exports\nexport default connect(mapStateToProps, mapDispatchToProps)(States);"]},"metadata":{},"sourceType":"module"}